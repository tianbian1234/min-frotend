{"version":3,"sources":["components_common/demoPintu/1.jpg","components_common/banner/images/event_1_large.jpg","components_common/banner/images/event_2_large.jpg","components_common/banner/images/event_3_large.jpg","components_common/banner/images/event_4_large.jpg","components_common/banner/images/event_5_large.jpg","components/listItem/ItemTypes.js","components/listItem/index.js","containers/index.js","App.js","containers/amap.js","components/widget/index.js","components/wordcloud/index.js","components/widgetView.js","components/wList/index.js","containers/dashboard.js","components/eCard/index.js","components/echarts/bar/index.js","components/echarts/line/index.js","components/echarts/lines/index.js","components/echarts/map/index.js","components/echarts/shuiqiu/index.js","components/wordcloud3d/index.js","containers/echarts.js","containers/rxTest.js","components_common/banner/index.js","components_common/head/index.js","components_common/demoPintu/block.js","components_common/demo2048/index.js","components_common/demoPintu/index.js","containers/component.js","route/index.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","ItemTypes","style","border","padding","marginBottom","backgroundColor","cursor","Card","React","forwardRef","_ref","ref","text","isDragging","connectDragSource","connectDropTarget","elementRef","useRef","opacity","useImperativeHandle","getNode","current","react_default","a","createElement","Object","assign","DropTarget","hover","props","monitor","component","node","dragIndex","getItem","index","hoverIndex","console","log","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","bottom","top","hoverClientY","getClientOffset","y","moveCard","connect","dropTarget","DragSource","beginDrag","id","dragSource","width","overflow","whiteSpace","textOverflow","display","flexDirection","height","background","style1","position","left","right","ListLi","_useState","useState","_useState2","slicedToArray","cards","setCards","dragCard","update","$splice","map","card","i","listItem","key","SliderBar","R","children","ScreenListCon","App","className","cjs","backend","HTML5Backend","Component","AMap","window","Loca","Amap","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","openInfoWin","event","content","infoWin","InfoWindow","isCustom","offset","Pixel","x","offsetX","offsetY","lngLat","containerToLngLat","tableDom","infoDom","document","appendChild","setContent","trStr","name","innerHTML","open","closeInfoWin","close","_this2","Map","mapStyle","visible","zoom","center","viewMode","layer","PointLayer","eventSupport","fitView","on","ev","rawData","originalEvent","名称","位置","setData","lnglat","setOptions","radius","color","borderColor","borderWidth","selectStyle","render","Widget","handleMouseDown","e","stopPropagation","_this$refs$widget$get","refs","widget","parentLeft","parentNode","parentTop","scrolLeft","clientX","scrolTop","clientY","setState","left1","top1","addEventListener","handleMouseMove","handleMouseUp","removeEventListener","_this$state","state","handleActive","active","handleScaleDom","ele","type","leftNow","topNow","nLeft","nWidth","nHeight","nTop","_ele$getBoundingClien","handleScale","_this$state2","ControlhandleScaleDom","target","onmousemove","_ControlhandleScaleDo","sendSize","onmouseup","boxSizing","pading","onMouseDown","onMouseUp","onClick","WordCloud","drawWordcloud","option","title","textStyle","fontSize","tooltip","show","series","sizeRange","rotationRange","textPadding","autoSize","enable","minSize","normal","Math","round","random","join","emphasis","shadowBlur","shadowColor","data","value","myChart","setOption","canvasWH","echarts","init","getElementsByClassName","nextProps","JSON","stringify","resize","Test","conf","widget_Widget","wordcloud_WordCloud","DashBoard","widgetView_Test","WigetList","handleMousedown","onAddWidget","margin","float","draggable","changewidgetView","wList_WigetList","widgetView","Ecard","Bar","drawB","useEffect","data3","trigger","legend","grid","containLabel","yAxis","axisLabel","interval","formatter","splitLine","lineStyle","xAxis","splitNumber","stack","barWidth","axisPointer","boundaryGap","axisLine","axisTick","smooth","symbol","symbolSize","showSymbol","animationDelay","animationDuration","markPoint","x2","y2","colorStops","globalCoord","areaStyle","graphic","LinearGradient","itemStyle","draw","Echarts","registerMap","china","chinaGeoCoordMap","黑龙江","内蒙古","吉林","北京市","辽宁","河北","天津","山西","陕西","甘肃","宁夏","青海","新疆","西藏","四川","重庆","山东","河南","江苏","安徽","湖北","浙江","福建","江西","湖南","贵州","云南","广东","广西","海南","上海","convertData","res","length","dataItem","fromCoord","toCoord","push","coord","forEach","item","zlevel","effect","period","trailLength","curveness","coordinateSystem","rippleEffect","brushType","scale","label","params","val","concat","showDelay","hideDelay","enterable","transitionDuration","extraCssText","ticket","callback","seriesIndex","visualMap","min","max","calculable","geo","roam","world","Shuiqiu","PI","EchartsDraw","match","eCard_Ecard","bar","line","lines","echarts_shuiqiu","RxjsTest","Swiper","Block","canvas","avW","avH","el","DemoPinTu","clipImage","parseInt","container","number","j","blocks","correctMap","imageData","ctx","getImageData","getContext","putImageData","renderToDom","maps","doms","instances","item1","initBlock","block_Block","avw","img","Image","onload","drawImage","src","Ima1","_this3","Components","demoPintu_DemoPinTu","BasicRoute","react_router_dom","react_router","exact","path","Boolean","location","hostname","ReactDOM","route","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e1ce24c7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/1.3af96c47.jpg\";","module.exports = __webpack_public_path__ + \"static/media/event_1_large.b41838cf.jpg\";","module.exports = __webpack_public_path__ + \"static/media/event_2_large.8f8dedad.jpg\";","module.exports = __webpack_public_path__ + \"static/media/event_3_large.569f9278.jpg\";","module.exports = __webpack_public_path__ + \"static/media/event_4_large.7e0716e7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/event_5_large.43632f33.jpg\";","export default {\n    CARD: 'card',\n  }\n  ","import React, { useImperativeHandle, useRef } from 'react'\nimport { DragSource, DropTarget } from 'react-dnd'\nimport ItemTypes from './ItemTypes'\n\nconst style = {\n    border: '1px dashed gray',\n    padding: '0.5rem 1rem',\n    marginBottom: '.5rem',\n    backgroundColor: 'white',\n    cursor: 'move'\n}\n\nconst Card = React.forwardRef(\n    ({text, isDragging, connectDragSource, connectDropTarget}, ref) => {\n        const elementRef = useRef(null)\n        connectDragSource(elementRef)\n        connectDropTarget(elementRef)\n        const opacity = isDragging ? 0 : 1\n        useImperativeHandle(ref, () => ({\n            getNode: () => elementRef.current\n        }))\n        return (\n            <div ref={elementRef} style={Object.assign({}, style, { opacity })}>\n                {text}\n            </div>\n        )\n    }\n)\n\nexport default DropTarget(\n    ItemTypes.CARD,\n    {\n        hover(props, monitor, component) {\n            if (!component) {\n                return null\n            }\n            // node = HTML Div element from imperative API\n            const node = component.getNode()\n            if (!node) {\n                return null\n            }\n            const dragIndex = monitor.getItem().index\n            const hoverIndex = props.index\n            console.log(\"eeeeeeeeee\", dragIndex, hoverIndex);\n            // Don't replace items with themselves\n            if (dragIndex === hoverIndex) {\n                return\n            }\n            // Determine rectangle on screen\n            const hoverBoundingRect = node.getBoundingClientRect()\n            // Get vertical middle\n            const hoverMiddleY =\n            (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2\n            // Determine mouse position\n            const clientOffset = monitor.getClientOffset()\n            // Get pixels to the top\n            const hoverClientY = clientOffset.y - hoverBoundingRect.top\n            // Only perform the move when the mouse has crossed half of the items height\n            // When dragging downwards, only move when the cursor is below 50%\n            // When dragging upwards, only move when the cursor is above 50%\n            // Dragging downwards\n            if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n                return\n            }\n            // Dragging upwards\n            if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n                return\n            }\n            // Time to actually perform the action\n            props.moveCard(dragIndex, hoverIndex)\n            // Note: we're mutating the monitor item here!\n            // Generally it's better to avoid mutations,\n            // but it's good here for the sake of performance\n            // to avoid expensive index searches.\n            monitor.getItem().index = hoverIndex\n        }\n    },\n    connect => ({\n        connectDropTarget: connect.dropTarget(),\n    }),\n)(\n    DragSource(\n        ItemTypes.CARD,\n        {\n          beginDrag: props => ({\n            id: props.id,\n            index: props.index,\n          }),\n        },\n        (connect, monitor) => ({\n          connectDragSource: connect.dragSource(),\n          isDragging: monitor.isDragging(),\n        }),\n      )(Card),\n)","import React,{ useState } from 'react';\nimport ListItem from '../components/listItem';\nimport update from 'immutability-helper';\nimport * as R from 'ramda';\n\nconst style = {\n    width: 204,\n    overflow: 'hidden',\n    whiteSpace: 'no-wrap',\n    textOverflow: 'ellipsis',\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100%',\n    background: '#202020'\n}\nconst style1 = {\n    position: 'absolute',\n    top: 90,\n    bottom: 0,\n    left: 204,\n    right: 0,\n    padding: '0 10px',\n    overflow: 'auto'\n}\n \nconst Slider = children => (<div style={style}>\n    {children}\n</div>)\n\nconst ScreenListContainer = children => (<div style={style1}> {children}</div>)\n\nconst ListLi = () => {\n\n    let cardsObj = [\n        {\n            id: 1,\n            text: '默认分组',\n          },\n          {\n            id: 2,\n            text: '11111',\n          },\n          {\n            id: 3,\n            text: '222222',\n          },\n          {\n            id: 4,\n            text: '333333',\n          },\n          {\n            id: 5,\n            text:'4444444',\n          },\n          {\n            id: 6,\n            text: '555555',\n          },\n          {\n            id: 7,\n            text: '666666',\n          }\n    ]\n\n    const [ cards, setCards ] = useState(cardsObj)\n\n    const moveCard = (dragIndex, hoverIndex) => {\n        const dragCard = cards[dragIndex];\n        setCards(\n            update(cards,{\n                $splice: [[dragIndex, 1], [hoverIndex, 0, dragCard]],\n            })\n        )\n    }\n    return (cards.map((card, i) => (<ListItem\n        key={card.id}\n        index={i}\n        id={card.id}\n        text={card.text}\n        moveCard={moveCard}\n    />)))\n}\n\nconst SliderBar = R.compose(Slider, ListLi);\n\nconst ScreenListCon = R.compose(ScreenListContainer, ListLi);\n\nexport { SliderBar, ScreenListCon }","import React, { Component } from 'react';\nimport {  SliderBar as SliderForGrounp, ScreenListCon } from './containers/index';\nimport { DragDropContextProvider } from 'react-dnd';\nimport HTML5Backend from 'react-dnd-html5-backend';\n// import Banner from './components/banner';\nimport './index.css';\nclass App extends Component{\n  render(){\n    \n    return(\n      <div className='screen'> \n        <DragDropContextProvider backend={HTML5Backend}>\n          <SliderForGrounp />\n          <ScreenListCon />\n        </DragDropContextProvider>\n        {/* <Banner /> */}\n      </div>\n    )\n  }\n}\n\nexport default App;","import React, { Component } from 'react';\n\nconst AMap = window.AMap;\nconst Loca = window.Loca;\nclass Amap extends Component{\n    constructor(props){\n        super(props)\n        this.infoWin = null\n        this.tableDom = null\n    }\n  \n    openInfoWin = (map, event, content) => {\n        if (!this.infoWin) {\n            this.infoWin = new AMap.InfoWindow({\n                isCustom: true,  //使用自定义窗体\n                offset: new AMap.Pixel(130, 100)\n            });\n        }\n    \n        var x = event.offsetX;\n        var y = event.offsetY;\n        var lngLat = map.containerToLngLat(new AMap.Pixel(x, y));\n    \n        if (!this.tableDom) {\n            let infoDom = document.createElement('div');\n            infoDom.className = 'info';\n            this.tableDom = document.createElement('table');\n            infoDom.appendChild(this.tableDom);\n            this.infoWin.setContent(infoDom);\n        }\n    \n        var trStr = '';\n        for (var name in content) {\n            var val = content[name];\n            trStr +=\n                '<tr>' +\n                    '<td class=\"label\">' + name + '</td>' +\n                    '<td>&nbsp;</td>' +\n                    '<td class=\"content\">' + val + '</td>' +\n                '</tr>'\n        }\n    \n        this.tableDom.innerHTML = trStr;\n        this.infoWin.open(map, lngLat);\n    }\n    \n    closeInfoWin = () => {\n        if (this.infoWin) {\n            this.infoWin.close();\n        }\n    }\n\n    componentDidMount(){\n        var map = new AMap.Map('container', {\n            mapStyle: 'amap://styles/3d7f941a3d5502413c674d6a1dc652d4',\n            visible: true,\n            zoom: 4,\n            center: [107.4976, 32.1697],\n            viewMode: '3D'\n        });\n\n        var layer = new Loca.PointLayer({\n            eventSupport: true,\n            fitView: true,\n            map: map\n        });\n\n        layer.on('mousemove', (ev) => {\n            // 事件类型\n            // var type = ev.type;\n            // 当前元素的原始数据\n            var rawData = ev.rawData;\n            // 原始鼠标事件\n            var originalEvent = ev.originalEvent;\n\n            this.openInfoWin(map, originalEvent, {\n                '名称': rawData.name,\n                '位置': rawData.center\n            });\n        });\n\n        layer.on('mouseleave', (ev) => {\n            this.closeInfoWin();\n        });\n        let districts = [\n            { 'name': '北京市', 'center': '116.407394,39.904211' },\n            { 'name': '天津市', 'center': '117.200983,39.084158' },\n            { 'name': '河北省', 'center': '114.530235,38.037433' },\n            { 'name': '山西省', 'center': '112.562678,37.873499' },\n            { 'name': '内蒙古自治区', 'center': '111.76629,40.81739' },\n            { 'name': '辽宁省', 'center': '123.431382,41.836175' },\n            { 'name': '吉林省', 'center': '125.32568,43.897016' },\n            { 'name': '黑龙江省', 'center': '126.661665,45.742366' },\n            { 'name': '上海市', 'center': '121.473662,31.230372' },\n            { 'name': '江苏省', 'center': '118.762765,32.060875' },\n            { 'name': '浙江省', 'center': '120.152585,30.266597' },\n            { 'name': '安徽省', 'center': '117.329949,31.733806' },\n            { 'name': '福建省', 'center': '119.295143,26.100779' },\n            { 'name': '江西省', 'center': '115.81635,28.63666' },\n            { 'name': '山东省', 'center': '117.019915,36.671156' },\n            { 'name': '河南省', 'center': '113.753394,34.765869' },\n            { 'name': '湖北省', 'center': '114.341745,30.546557' },\n            { 'name': '湖南省', 'center': '112.9836,28.112743' },\n            { 'name': '广东省', 'center': '113.26641,23.132324' },\n            { 'name': '广西壮族自治区', 'center': '108.327546,22.815478' },\n            { 'name': '海南省', 'center': '110.349228,20.017377' },\n            { 'name': '重庆市', 'center': '106.551643,29.562849' },\n            { 'name': '四川省', 'center': '104.075809,30.651239' },\n            { 'name': '贵州省', 'center': '106.70546,26.600055' },\n            { 'name': '云南省', 'center': '102.710002,25.045806' },\n            { 'name': '西藏自治区', 'center': '91.117525,29.647535' },\n            { 'name': '陕西省', 'center': '108.954347,34.265502' },\n            { 'name': '甘肃省', 'center': '103.826447,36.05956' },\n            { 'name': '青海省', 'center': '101.780268,36.620939' },\n            { 'name': '宁夏回族自治区', 'center': '106.259126,38.472641' },\n            { 'name': '新疆维吾尔自治区', 'center': '87.627704,43.793026' },\n            { 'name': '台湾省', 'center': '121.509062,25.044332' },\n            { 'name': '香港特别行政区', 'center': '114.171203,22.277468' },\n            { 'name': '澳门特别行政区', 'center': '113.543028,22.186835' }\n        ];\n\n        layer.setData(districts, {\n            lnglat: 'center'\n        });\n\n        layer.setOptions({\n            style: {\n                radius: 10,\n                color: '#4fc2ff',\n                borderColor: '#ffffff',\n                borderWidth: 1.5,\n                opacity: 0.8\n            },\n            selectStyle: {\n                radius: 14,\n                color: '#ffe30a'\n            }\n        });\n\n        layer.render();\n    }\n    render(){\n        return(\n            <div id=\"container\" style={{width: '100%', height: '100%'}}>\n\n            </div>\n            \n        )\n    }\n}\n\nexport default Amap","import React, { Component } from 'react';\nimport * as R from 'ramda';\nimport './index.scss';\n\nexport default class Widget extends Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            left1: 0,\n            top1: 0,\n            parentLeft: 0,\n            parentTop: 0,\n            active: 0\n        }\n    }\n\n    handleMouseDown = (e) => {\n        e.stopPropagation();\n        let { left, top } = this.refs.widget.getBoundingClientRect();\n        let parentLeft = this.refs.widget.parentNode.getBoundingClientRect().left;\n        let parentTop = this.refs.widget.parentNode.getBoundingClientRect().top;\n        let scrolLeft = e.clientX - left + parentLeft;\n        let scrolTop = e.clientY - top + parentTop;\n\n        this.setState({\n            left1: scrolLeft,\n            top1: scrolTop,\n            parentLeft: parentLeft,\n            parentTop: parentTop,\n        })\n        this.refs.widget.addEventListener(\"mousemove\", this.handleMouseMove, false)\n    }\n\n    handleMouseUp = (e) => {\n        this.refs.widget.removeEventListener(\"mousemove\", this.handleMouseMove)\n    }\n\n    handleMouseMove = () => {\n        let { left1, top1 } = this.state;\n        let e = window.event;\n        if(e.clientX - left1 >= 0 || e.clientY - top1 >= 0){\n            this.refs.widget.style.left = (e.clientX - left1)+'px';\n            this.refs.widget.style.top = (e.clientY - top1)+'px';\n        }\n    }\n\n    handleActive = (e) => {\n        this.refs.widget.style.border = \"2px dashed #00ff00\";\n        this.setState({\n            active: 1\n        })\n    }\n    handleScaleDom = (parentLeft, parentTop, ele, type, e) => {\n        let {  left, top, width, height } = ele.getBoundingClientRect();\n        let leftNow, topNow, nLeft, nWidth, nHeight, nTop;\n        switch(type){\n            case 'TL':\n                leftNow = left + width; topNow = top + height;\n                nLeft = (e.clientY-parentTop) + 'px';\n                nTop = (e.clientX-parentLeft) + 'px';\n                nHeight = (topNow - e.clientY) + 'px'; \n                nWidth = (leftNow - e.clientX) + 'px';\n                break;\n            case 'T':\n                topNow = top + height;\n                console.log(\"llllllllllll\", left);\n                nLeft = left + 'px';\n                console.log(\"nnnnnnnnnnnn\", nLeft);\n                nTop = (e.clientY-parentTop) + 'px';\n                nWidth = width + 'px';\n                nHeight = (topNow - e.clientY) + 'px'; \n                break;\n            case 'TR':\n                leftNow = left; topNow = top + height;\n                nTop = (e.clientY-parentTop) + 'px';\n                nLeft = (left-parentLeft) + 'px';\n                nWidth = (topNow - e.clientY) + 'px';\n                nHeight = (e.clientX - leftNow) + 'px';\n                break;\n            case 'R':\n                leftNow = left; topNow = top + height;\n                nLeft = (left-parentLeft) + 'px';\n                nTop = top + 'px';\n                nWidth = (e.clientX - leftNow) + 'px';\n                nHeight = height + 'px';\n                break;\n            case 'BR':\n                nLeft = (left-parentLeft) + 'px';\n                nTop = (top-parentTop) + 'px';\n                nWidth = (e.clientX - left) + 'px';\n                nHeight = (e.clientY - top) + 'px';\n                break;\n            case 'B':\n                nLeft = left + 'px';\n                nTop = (top-parentTop) + 'px';\n                nWidth = width + 'px';\n                nHeight = (e.clientY - top) + 'px';\n                break;\n            case 'BL':\n                leftNow = left + width;\n                nLeft = (e.clientX-parentLeft) + 'px';\n                nTop = (top-parentTop) + 'px';\n                nWidth = (leftNow - e.clientX) + 'px';\n                nHeight = (e.clientY - top) + 'px';\n                break;\n            case 'L':\n                leftNow = left + width;\n                nLeft= (e.clientX-parentLeft) + 'px';\n                nTop = top + 'px';\n                nWidth = (leftNow - e.clientX) + 'px';\n                nHeight = height + 'px';\n                break;\n            default:\n                break;\n            \n        }\n\n        ele.style.left = nLeft;\n        ele.style.top = nTop;\n        ele.style.width = nWidth;\n        ele.style.height = nHeight;\n\n        return { nWidth, nHeight };\n\n    }\n    handleScale = (type, e) => {\n        e.stopPropagation();\n        let { parentLeft, parentTop } = this.state;\n\n        let ControlhandleScaleDom = R.curry(this.handleScaleDom)(parentLeft, parentTop, this.refs.widget)\n\n        console.log(\"222222\", e);\n\n        e.target.onmousemove = (e) => {\n            let { nWidth, nHeight } = ControlhandleScaleDom(type, e)\n            this.props.sendSize(nWidth, nHeight);\n        }\n        e.target.onmouseup = () => {\n            document.onmousemove = null;\n            document.onmouseup = null;\n        }\n    }\n\n    render(){\n        let { active } = this.state;\n        return(\n            <div \n                className=\"widget-container\"\n                ref=\"widget\"\n                style={{position: 'absolute', cursor: 'move', background: '#cccccc',boxSizing: 'border-box', pading: 10}}\n                onMouseDown={this.handleMouseDown}\n                onMouseUp = {this.handleMouseUp}\n                onClick = { this.handleActive }\n            >\n            {active === 1 && <div className=\"fangsuo\">\n                <span className=\"resize-handle top_left\" onMouseDown={(e) => this.handleScale('TL', e)}></span>\n                <span className=\"resize-handle top\" onMouseDown={(e) => this.handleScale('T', e)}></span>\n                <span className=\"resize-handle top_right\" onMouseDown={(e) => this.handleScale('TR', e)}></span>\n                <span className=\"resize-handle right\" onMouseDown={(e) => this.handleScale('R', e)}></span>\n                <span className=\"resize-handle bottom_right\" onMouseDown={(e) => this.handleScale('BR', e)}></span>\n                <span className=\"resize-handle bottom\" onMouseDown={(e) => this.handleScale('B', e)}></span>\n                <span className=\"resize-handle bottom_left\" onMouseDown={(e) => this.handleScale('BL', e)}></span>\n                <span className=\"resize-handle left\" onMouseDown={(e) => this.handleScale('L', e)}></span>\n            </div>}\n                {this.props.children}\n            </div>\n        )\n    }\n} ","import React, { Component } from 'react';\nimport echarts from '../../../node_modules/echarts/lib/echarts'\nimport '../../../node_modules/echarts-wordcloud';\n\nexport default class WordCloud extends Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            canvasWH: this.props.canvasWH\n        }\n    }\n    drawWordcloud = () => {\n        let option ={\n            title: {\n                text: '词云',//标题\n                x: 'center',\n                textStyle: {\n                    fontSize: 23\n                }\n         \n            },\n            backgroundColor: 'rgba(0,0,0,0)',\n            tooltip: {\n                show: true\n            },\n            series: [{\n                name: '热点分析',//数据提示窗标题\n                type: 'wordCloud',\n                sizeRange: [6, 66],//画布范围，如果设置太大会出现少词（溢出屏幕）\n                rotationRange: [-45, 90],//数据翻转范围\n                //shape: 'circle',\n                textPadding: 0,\n                autoSize: {\n                    enable: true,\n                    minSize: 6\n                },\n                textStyle: {\n                    normal: {\n                        color: function() {\n                            return 'rgb(' + [\n                                Math.round(Math.random() * 160),\n                                Math.round(Math.random() * 160),\n                                Math.round(Math.random() * 160)\n                            ].join(',') + ')';\n                        }\n                    },\n                    emphasis: {\n                        shadowBlur: 10,\n                        shadowColor: '#333'\n                    }\n                },\n                data: [{\n                    name: \"数据一\",\n                    value: 1000\n                }, {\n                    name: \"数据二\",\n                    value: 520\n                },{\n                    name: \"数据一\",\n                    value: 1000\n                }, {\n                    name: \"数据二\",\n                    value: 520\n                },{\n                    name: \"数据一\",\n                    value: 1000\n                }, {\n                    name: \"数据二\",\n                    value: 520\n                },{\n                    name: \"数据一\",\n                    value: 1000\n                }, {\n                    name: \"数据二\",\n                    value: 520\n                }]\n            }]\n        };\n        this.myChart.setOption(option);\n    }\n    componentDidMount(){\n        this.myChart = echarts.init(document.getElementsByClassName('widget-box')[0])\n        this.drawWordcloud()\n    }\n\n    componentWillReceiveProps(nextProps){\n        if(JSON.stringify(this.props.canvasWH) !== JSON.stringify(nextProps.canvasWH)){\n            this.setState({\n                canvasWH: nextProps.canvasWH\n            })\n            this.myChart.resize();\n        }\n    }\n\n    render(){\n        return(\n            <div className=\"widget-box\" style={{width: '100%', height: '100%'}}>\n\n            </div>\n        )\n    }\n}","import React from 'react';\nimport Widget from './widget';\nimport * as R from 'ramda';\nimport WordCloud from '../components/wordcloud';\n\nconst Container = children => {\n    return (<div  className=\"container\" style={{width: '100%', height: '100%', position: 'relative'}}>\n        {children}\n    </div>)\n}\n\nconst conf = () => ({width: 300, height: 300})\n\nclass Test extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            conf: this.props.conf\n        }\n    }\n\n    sendSize = (width, height) => {\n        this.setState({\n            conf: {\n                width: width,\n                height: height\n            }\n        })\n    }\n\n    render(){\n        let { conf } = this.state\n        return (\n            <Widget sendSize={(width, height) => this.sendSize(width, height) } ><WordCloud canvasWH={conf} /></Widget>\n        ) \n    }\n}\n\n\nconst widget = (conf) => {\n        return (<Test conf={conf} />)\n}\n\n\nconst DashBoard = R.compose(Container, widget, conf);\n\n\nexport default DashBoard","import React, { Component } from 'react';\n\nexport default class WigetList extends Component{\n  \n    handleMousedown = (e) => {\n        let { onAddWidget } = this.props;\n        if(typeof onAddWidget === 'function'){\n            onAddWidget(e.target.value);\n        }\n    }\n\n    render(){\n        return(\n            <ul style={{margin: 0, padding: 0, float: 'left', width: 100, height: '100%', overflow:'auto'}}>\n                <li className=\"listItem\" onMouseDown={this.handleMouseDown} draggable=\"true\" style={{width: '100%', height: 100, background: '#00ff0f'}}>1</li>\n            </ul>\n        )\n    }\n}","import React, { Component } from 'react';\nimport WidgetView from '../components/widgetView';\nimport WidgetList from '../components/wList';\nclass App extends Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            \n        }\n    }\n\n    changewidgetView = (value) => {\n        \n    }\n\n    render(){\n        return(\n        <div className='screen' style={{width: '100%', height: '100%', display: 'flex'}}> \n            <WidgetList\n                onAddWidget = {this.changewidgetView}\n            />\n            <WidgetView />\n        </div>\n        )\n    }\n}\n\nexport default App;","import React, { Component } from 'react';\nimport './index.scss';\n\nexport default class Ecard extends Component{\n    render(){\n        return(\n            <div className=\"container-card\">\n                {this.props.children}\n            </div>\n        )\n    }\n}","import React, { useEffect, useRef } from 'react';\nimport echarts from 'echarts';\n\nconst Bar = (props) => {\n    let drawB = useRef(null);\n\n    useEffect(() => {\n        let myChart = echarts.init(drawB.current);\n        let data1 = [20, 30, 20, 30, 20, 30, 20, 30, 20, 30];\n        let data2 = [9, 30, 9, 60, 70, 20, 59, 20, 49, 20];\n        let data3 = [20, 30, 20, 30, 20, 30, 20, 30, 20, 30];\n        let datacity = ['济南市', '青岛市', '淄博市', '枣庄', '东营', '烟台市', '潍坊市', '济宁市', '威海市', '泰安市'];\n        let option = {\n                color: ['#388BFF', '#05C3FA', '#F6931C', '#FFD52E'],\n                tooltip: {\n                    trigger: 'axis',\n                },\n                legend: {\n            \n                    top: '8%',\n                    data: ['存量', '新增', '拆除', '整改'],\n                },\n                grid: { //图表的位置\n                    top: '20%',\n                    left: '3%',\n                    right: '4%',\n                    bottom: '5%',\n                    containLabel: true\n                },\n                yAxis: [{\n                    type: 'value',\n                    axisLabel: {\n                        show: true,\n                        interval: 'auto',\n                        formatter: '{value} '\n                    },\n                    splitLine: {\n                        show: true,\n                        lineStyle: {\n                            type: 'dashed'\n                        }\n                    },\n                    show: true\n            \n                }],\n                xAxis: [{\n                    type: 'category',\n                    axisLabel: {\n                        interval: 0,\n                        show: true,\n                        splitNumber: 15,\n                        textStyle: {\n                            fontSize: 10,\n                            color: '#000'\n                        },\n            \n                    },\n                    data: datacity,\n                }],\n                series: [{\n                        name: '存量',\n                        type: 'bar',\n                        stack: 'sum',\n                        barWidth: '20px',\n                        data: data1\n            \n                    },\n                    {\n                        name: '新增',\n                        type: 'bar',\n                        barWidth: '20px',\n                        stack: 'sum',\n                        data: data2,\n            \n                    },\n                    {\n                        name: '拆除',\n                        type: 'bar',\n                        color: '#F6931C',\n                        stack: 'sum1',\n                        barWidth: '20px',\n                        data: data3\n            \n                    },\n                    {\n                        name: '整改',\n                        type: 'bar',\n                        color: '#FFD52E',\n                        stack: 'sum1',\n                        barWidth: '20px',\n                        data: data3\n            \n                    },\n                ]\n            };\n        myChart.setOption(option)\n    })\n\n\n    return (<div ref={drawB} style={{width: '100%', height: '100%'}}>\n\n    </div>)\n}\n\nexport default Bar;","import React, { useEffect, useRef } from 'react';\nimport echarts from 'echarts';\n\nconst Bar = (props) => {\n    let drawB = useRef(null);\n\n    useEffect(() => {\n        let myChart = echarts.init(drawB.current);\n        let option = {\n            backgroundColor: '#260765',\n            tooltip: {\n                trigger: 'axis',\n                axisPointer: {\n                    lineStyle: {\n                        color: '#57617B'\n                    }\n                }\n            },\n            grid: {\n                left: '10%',\n                right: '10%',\n                bottom: '30%',\n                top: '20%',\n                containLabel: true\n            },\n            xAxis: [\n                {\n                type: 'category',\n                boundaryGap: false,\n                axisLine: {\n                    lineStyle: {\n                        color: '#0E2A43'\n                    }\n                },\n                axisLabel: {\n                    margin: 10,\n                    textStyle: {\n                        fontSize: 14,\n                        color: '#D5CBE8'\n                    }\n                },\n                axisTick: {\n                    show: false\n                },\n                data: ['13:00', '13:05', '13:10', '13:15', '13:20', '13:25', '13:30', '13:35', '13:40', '13:45', '13:50', '13:55']\n            }, {\n                axisPointer: {\n                    show: false\n                },\n                axisLine: {\n                    lineStyle: {\n                        color: '#0E2A43'\n                    }\n                },\n                axisTick: {\n                    show: false\n                },\n                position: 'bottom',\n                offset: 20\n            }],\n            yAxis: [{\n                type: 'value',\n                name: '单位（%）',\n                axisTick: {\n                    show: false\n                },\n                axisLine: {\n                    lineStyle: {\n                        color: '#0E2A43'\n                    }\n                },\n                axisLabel: {\n                    margin: 10,\n                    textStyle: {\n                        fontSize: 14,\n                        color: '#D5CBE8'\n                    }\n                },\n                splitLine: {\n                    show: false,\n                    lineStyle: {\n                        color: '#57617B'\n                    }\n                }\n            }],\n            series: [{\n                name: '移动',\n                type: 'line',\n                smooth: true,\n                stack: '总量',\n                symbol: 'circle',\n                symbolSize: 5,\n                showSymbol: false,\n                animationDelay: 2000,\n                animationDuration: 1000,\n                markPoint: {\n                    // symbol: 'image://url',\n                    data: [\n                        {type: 'max', name: '最大值'}\n                    ],\n                    animationDelay: 3000,\n                    animationDuration: 1000\n                },\n                lineStyle: {\n                    normal: {\n                        width: 1,\n                        color: {\n                            type: 'linear',\n                            x: 0,\n                            y: 0,\n                            x2: 1,\n                            y2: 0,\n                            colorStops: [{\n                                offset: 0, color: 'red' // 0% 处的颜色\n                            }, {\n                                offset: 1, color: 'grey' // 100% 处的颜色\n                            }],\n                            globalCoord: false // 缺省为 false\n                        },\n                        opacity: 0.9\n                    }\n                },\n                areaStyle: {\n                    normal: {\n                        color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n                            offset: 0,\n                            color: 'rgba(137, 189, 27, 0.3)'\n                        }, {\n                            offset: 0.8,\n                            color: 'rgba(137, 189, 27, 0)'\n                        }], false),\n                        shadowColor: 'rgba(0, 0, 0, 0.1)',\n                        shadowBlur: 10\n                    }\n                },\n                itemStyle: {\n                    normal: {\n                        color: 'rgb(137,189,27)',\n                        borderColor: 'rgba(137,189,2,0.27)',\n                        borderWidth: 12\n        \n                    }\n                },\n                data: [220, 182, 191, 134, 250, 120, 110, 125, 145, 122, 165, 122]\n            }, {\n                name: '电信',\n                type: 'line',\n                smooth: true,\n                symbol: 'circle',\n                stack: '总量',\n                symbolSize: 5,\n                animationDelay: 1000,\n                animationDuration: 1000,\n                markPoint: {\n                    data: [\n                        {type: 'max', name: '最大值'}\n                    ],\n                    animationDelay: 2000,\n                    animationDuration: 1000\n                },\n                showSymbol: false,\n                lineStyle: {\n                    normal: {\n                        width: 1,\n                        color: {\n                            type: 'linear',\n                            x: 0,\n                            y: 0,\n                            x2: 1,\n                            y2: 0,\n                            colorStops: [{\n                                offset: 0, color: 'red' // 0% 处的颜色\n                            }, {\n                                offset: 1, color: 'yellow' // 100% 处的颜色\n                            }],\n                            globalCoord: false // 缺省为 false\n                        },\n                        opacity: 0.9\n                    }\n                },\n                areaStyle: {\n                    normal: {\n                        color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n                            offset: 0,\n                            color: 'rgba(0, 236, 212, 0.3)'\n                        }, {\n                            offset: 0.8,\n                            color: 'rgba(0, 236, 212, 0)'\n                        }], false),\n                        shadowColor: 'rgba(0, 0, 0, 0.1)',\n                        shadowBlur: 10\n                    }\n                },\n                itemStyle: {\n                    normal: {\n                        color: 'rgb(0,136,212)',\n                        borderColor: 'rgba(0,136,212,0.2)',\n                        borderWidth: 12\n        \n                    }\n                },\n                data: [120, 110, 125, 145, 122, 165, 122, 220, 282, 191, 134, 150]\n            }, {\n                name: '联通',\n                type: 'line',\n                stack: '总量',\n                smooth: true,\n                symbol: 'circle',\n                symbolSize: 5,\n                showSymbol: false,\n                animationDelay: 0,\n                animationDuration: 1000,\n                markPoint: {\n                    data: [\n                        {type: 'max', name: '最大值'}\n                    ],\n                    animationDelay: 1000,\n                    animationDuration: 1000\n                },\n                lineStyle: {\n                    normal: {\n                        width: 1,\n                        color: {\n                            type: 'linear',\n                            x: 0,\n                            y: 0,\n                            x2: 1,\n                            y2: 0,\n                            colorStops: [{\n                                offset: 0, color: 'red' // 0% 处的颜色\n                            }, {\n                                offset: 1, color: 'yellowgreen' // 100% 处的颜色\n                            }],\n                            globalCoord: false // 缺省为 false\n                        },\n                        opacity: 0.9\n                    }\n                },\n                areaStyle: {\n                    normal: {\n                        color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n                            offset: 0,\n                            color: 'rgba(219, 50, 51, 0.3)'\n                        }, {\n                            offset: 0.8,\n                            color: 'rgba(219, 50, 51, 0)'\n                        }], false),\n                        shadowColor: 'rgba(0, 0, 0, 0.1)',\n                        shadowBlur: 10\n                    }\n                },\n                itemStyle: {\n                    normal: {\n        \n                        color: 'rgb(219,50,51)',\n                        borderColor: 'rgba(219,50,51,0.2)',\n                        borderWidth: 12\n                    }\n                },\n                data: [220, 182, 325, 145, 122, 191, 134, 150, 120, 110, 165, 122]\n            }, ]\n        };\n        myChart.setOption(option)\n    })\n\n\n    return (<div ref={drawB} style={{width: '100%', height: '100%'}}>\n\n    </div>)\n}\n\nexport default Bar;","import React, { useEffect                                                                                                                                               , useRef } from 'react';\nimport echarts from 'echarts';\nimport china from '../../../public/geojson/CHN.json'\n// import { ajax } from '../../../utils/util';\n\nconst draw = () => {\n    let Echarts = useRef(null);\n    useEffect(()=>{\n        echarts.registerMap('china', china);\n        let myChart = echarts.init(Echarts.current)\n        var chinaGeoCoordMap = {   \n            '黑龙江': [127.9688, 45.368],\n            '内蒙古': [110.3467, 41.4899],\n            \"吉林\": [125.8154, 44.2584],\n            '北京市': [116.4551, 40.2539],\n            \"辽宁\": [123.1238, 42.1216],\n            \"河北\": [114.4995, 38.1006],\n            \"天津\": [117.4219, 39.4189],\n            \"山西\": [112.3352, 37.9413],\n            \"陕西\": [109.1162, 34.2004],\n            \"甘肃\": [103.5901, 36.3043],\n            \"宁夏\": [106.3586, 38.1775],\n            \"青海\": [101.4038, 36.8207],\n            \"新疆\": [87.9236, 43.5883],\n            \"西藏\": [91.11, 29.97],\n            \"四川\": [103.9526, 30.7617],\n            \"重庆\": [108.384366, 30.439702],\n            \"山东\": [117.1582, 36.8701],\n            \"河南\": [113.4668, 34.6234],\n            \"江苏\": [118.8062, 31.9208],\n            \"安徽\": [117.29, 32.0581],\n            \"湖北\": [114.3896, 30.6628],\n            \"浙江\": [119.5313, 29.8773],\n            \"福建\": [119.4543, 25.9222],\n            \"江西\": [116.0046, 28.6633],\n            \"湖南\": [113.0823, 28.2568],\n            \"贵州\": [106.6992, 26.7682],\n            \"云南\": [102.9199, 25.4663],\n            \"广东\": [113.12244, 23.009505],\n            \"广西\": [108.479, 23.1152],\n            \"海南\": [110.3893, 19.8516],\n            '上海': [121.4648, 31.2891]\n        };\n        var chinaDatas = [\n            [{\n                name: '黑龙江',\n                value: 0\n            }],\t[{\n                name: '内蒙古',\n                value: 0\n            }],\t[{\n                name: '吉林',\n                value: 0\n            }],\t[{\n                name: '辽宁',\n                value: 0\n            }],\t[{\n                name: '河北',\n                value: 0\n            }],\t[{\n                name: '天津',\n                value: 0\n            }],\t[{\n                name: '山西',\n                value: 0\n            }],\t[{\n                name: '陕西',\n                value: 0\n            }],\t[{\n                name: '甘肃',\n                value: 0\n            }],\t[{\n                name: '宁夏',\n                value: 0\n            }],\t[{\n                name: '青海',\n                value: 0\n            }],\t[{\n                name: '新疆',\n                value: 0\n            }],[{\n                name: '西藏',\n                value: 0\n            }],\t[{\n                name: '四川',\n                value: 0\n            }],\t[{\n                name: '重庆',\n                value: 0\n            }],\t[{\n                name: '山东',\n                value: 0\n            }],\t[{\n                name: '河南',\n                value: 0\n            }],\t[{\n                name: '江苏',\n                value: 0\n            }],\t[{\n                name: '安徽',\n                value: 0\n            }],\t[{\t\n                name: '湖北',\n                value: 0\n            }],\t[{\n                name: '浙江',\n                value: 0\n            }],\t[{\n                name: '福建',\n                value: 0\n            }],\t[{\n                name: '江西',\n                value: 0\n            }],\t[{\n                name: '湖南',\n                value: 0\n            }],\t[{\n                name: '贵州',\n                value: 0\n            }],[{\n                name: '广西',\n                value: 0\n            }],\t[{\n                name: '海南',\n                value: 0\n            }],\t[{\n                name: '上海',\n                value: 1\n            }]\n        ];\n    \n        var convertData = function(data) {\n            var res = [];\n            for(var i = 0; i < data.length; i++) {\n                var dataItem = data[i];\n                var fromCoord = chinaGeoCoordMap[dataItem[0].name];\n                var toCoord = [116.4551,40.2539];\n                if(fromCoord && toCoord) {\n                    res.push([{\n                        coord: fromCoord,\n                        value: dataItem[0].value\n                    }, {\n                        coord: toCoord,\n                    }]);\n                }\n            }\n            return res;\n        };\n        var series = [];\n        [['北京市', chinaDatas]].forEach(function(item, i) {\n            console.log(item)\n            series.push({\n                    type: 'lines',\n                    zlevel: 2,\n                    effect: {\n                        show: true,\n                        period: 4, //箭头指向速度，值越小速度越快\n                        trailLength: 0.02, //特效尾迹长度[0,1]值越大，尾迹越长重\n                        symbol: 'arrow', //箭头图标\n                        symbolSize: 5, //图标大小\n                    },\n                    lineStyle: {\n                        normal: {\n                            width: 1, //尾迹线条宽度\n                            opacity: 1, //尾迹线条透明度\n                            curveness: .3 //尾迹线条曲直度\n                        }\n                    },\n                    data: convertData(item[1])\n                }, {\n                    type: 'effectScatter',\n                    coordinateSystem: 'geo',\n                    zlevel: 2,\n                    rippleEffect: { //涟漪特效\n                        period: 4, //动画时间，值越小速度越快\n                        brushType: 'stroke', //波纹绘制方式 stroke, fill\n                        scale: 4 //波纹圆环最大限制，值越大波纹越大\n                    },\n                    label: {\n                        normal: {\n                            show: true,\n                            position: 'right', //显示位置\n                            offset: [5, 0], //偏移设置\n                            formatter: function(params){//圆环显示文字\n                                return params.data.name;\n                            },\n                            fontSize: 13\n                        },\n                        emphasis: {\n                            show: true\n                        }\n                    },\n                    symbol: 'circle',\n                    symbolSize: function(val) {\n                        return 5+ val[2] * 5; //圆环大小\n                    },\n                    itemStyle: {\n                        normal: {\n                            show: false,\n                            color: '#f00'\n                        }\n                    },\n                    data: item[1].map(function(dataItem) {\n                        return {\n                            name: dataItem[0].name,\n                            value: chinaGeoCoordMap[dataItem[0].name].concat([dataItem[0].value])\n                        };\n                    }),\n                },\n                //被攻击点\n                {\n                    type: 'scatter',\n                    coordinateSystem: 'geo',\n                    zlevel: 2,\n                    rippleEffect: {\n                        period: 4,\n                        brushType: 'stroke',\n                        scale: 4\n                    },\n                    label: {\n                        normal: {\n                            show: true,\n                            position: 'right',\n                            //offset:[5, 0],\n                            color: '#0f0',\n                            formatter: '{b}',\n                            textStyle: {\n                                color: \"#0f0\"\n                            }\n                        },\n                        emphasis: {\n                            show: true,\n                            color: \"#f60\"\n                        }\n                    },\n                    symbol: 'pin',\n                    symbolSize: 50,\n                    data: [{\n                        name: item[0],\n                        value: chinaGeoCoordMap[item[0]].concat([10]),\n                    }],\n                }\n            );\n        });\n\n        let option = {\n            tooltip: {\n                trigger: 'item',\n                backgroundColor: 'rgba(166, 200, 76, 0.82)',\n                borderColor: '#FFFFCC',\n                showDelay: 0,\n                hideDelay: 0,\n                enterable: true,\n                transitionDuration: 0,\n                extraCssText: 'z-index:100',\n                formatter: function(params, ticket, callback) {\n                    //根据业务自己拓展要显示的内容\n                    var res = \"\";\n                    var name = params.name;\n                    var value = params.value[params.seriesIndex + 1];\n                    res = \"<span style='color:#fff;'>\" + name + \"</span><br/>数据：\" + value;\n                    return res;\n                }\n            },\n            backgroundColor:\"#013954\",\n            visualMap: { //图例值控制\n                min: 0,\n                max: 1,\n                calculable: true,\n                show: true,\n                color: ['#f44336', '#fc9700', '#ffde00', '#ffde00', '#00eaff'],\n                textStyle: {\n                    color: '#fff'\n                }\n            },\n            geo: {\n                map: 'china',\n                zoom: 1.2,\n                label: {\n                    emphasis: {\n                        show: false\n                    }\n                },\n                roam: true, //是否允许缩放\n                itemStyle: {\n                    normal: {\n                        color: 'rgba(51, 69, 89, .5)', //地图背景色\n                        borderColor: '#516a89', //省市边界线00fcff 516a89\n                        borderWidth: 1\n                    },\n                    emphasis: {\n                        color: 'rgba(37, 43, 61, .5)' //悬浮背景\n                    }\n                }\n            },\n            series: series\n        };\n        myChart.setOption(option);\n    })\n\n    return(\n        <div ref={Echarts} style={{width: '100%', height: '100%'}}></div>\n    )\n}\n\nexport default draw;","import React, { useEffect                                                                                                                                               , useRef } from 'react';\nimport echarts from 'echarts';\nimport world from '../../../public/geojson/world.json'\n// import { ajax } from '../../../utils/util';\n\nconst draw = () => {\n    let Echarts = useRef(null);\n    useEffect(()=>{\n        echarts.registerMap('world', world);\n        let myChart = echarts.init(Echarts.current)\n        var chinaGeoCoordMap = {   \n            '黑龙江': [127.9688, 45.368],\n            '内蒙古': [110.3467, 41.4899],\n            \"吉林\": [125.8154, 44.2584],\n            '北京市': [116.4551, 40.2539],\n            \"辽宁\": [123.1238, 42.1216],\n            \"河北\": [114.4995, 38.1006],\n            \"天津\": [117.4219, 39.4189],\n            \"山西\": [112.3352, 37.9413],\n            \"陕西\": [109.1162, 34.2004],\n            \"甘肃\": [103.5901, 36.3043],\n            \"宁夏\": [106.3586, 38.1775],\n            \"青海\": [101.4038, 36.8207],\n            \"新疆\": [87.9236, 43.5883],\n            \"西藏\": [91.11, 29.97],\n            \"四川\": [103.9526, 30.7617],\n            \"重庆\": [108.384366, 30.439702],\n            \"山东\": [117.1582, 36.8701],\n            \"河南\": [113.4668, 34.6234],\n            \"江苏\": [118.8062, 31.9208],\n            \"安徽\": [117.29, 32.0581],\n            \"湖北\": [114.3896, 30.6628],\n            \"浙江\": [119.5313, 29.8773],\n            \"福建\": [119.4543, 25.9222],\n            \"江西\": [116.0046, 28.6633],\n            \"湖南\": [113.0823, 28.2568],\n            \"贵州\": [106.6992, 26.7682],\n            \"云南\": [102.9199, 25.4663],\n            \"广东\": [113.12244, 23.009505],\n            \"广西\": [108.479, 23.1152],\n            \"海南\": [110.3893, 19.8516],\n            '上海': [121.4648, 31.2891]\n        };\n        var chinaDatas = [\n            [{\n                name: '黑龙江',\n                value: 0\n            }],\t[{\n                name: '内蒙古',\n                value: 0\n            }],\t[{\n                name: '吉林',\n                value: 0\n            }],\t[{\n                name: '辽宁',\n                value: 0\n            }],\t[{\n                name: '河北',\n                value: 0\n            }],\t[{\n                name: '天津',\n                value: 0\n            }],\t[{\n                name: '山西',\n                value: 0\n            }],\t[{\n                name: '陕西',\n                value: 0\n            }],\t[{\n                name: '甘肃',\n                value: 0\n            }],\t[{\n                name: '宁夏',\n                value: 0\n            }],\t[{\n                name: '青海',\n                value: 0\n            }],\t[{\n                name: '新疆',\n                value: 0\n            }],[{\n                name: '西藏',\n                value: 0\n            }],\t[{\n                name: '四川',\n                value: 0\n            }],\t[{\n                name: '重庆',\n                value: 0\n            }],\t[{\n                name: '山东',\n                value: 0\n            }],\t[{\n                name: '河南',\n                value: 0\n            }],\t[{\n                name: '江苏',\n                value: 0\n            }],\t[{\n                name: '安徽',\n                value: 0\n            }],\t[{\t\n                name: '湖北',\n                value: 0\n            }],\t[{\n                name: '浙江',\n                value: 0\n            }],\t[{\n                name: '福建',\n                value: 0\n            }],\t[{\n                name: '江西',\n                value: 0\n            }],\t[{\n                name: '湖南',\n                value: 0\n            }],\t[{\n                name: '贵州',\n                value: 0\n            }],[{\n                name: '广西',\n                value: 0\n            }],\t[{\n                name: '海南',\n                value: 0\n            }],\t[{\n                name: '上海',\n                value: 1\n            }]\n        ];\n    \n        var convertData = function(data) {\n            var res = [];\n            for(var i = 0; i < data.length; i++) {\n                var dataItem = data[i];\n                var fromCoord = chinaGeoCoordMap[dataItem[0].name];\n                var toCoord = [116.4551,40.2539];\n                if(fromCoord && toCoord) {\n                    res.push([{\n                        coord: fromCoord,\n                        value: dataItem[0].value\n                    }, {\n                        coord: toCoord,\n                    }]);\n                }\n            }\n            return res;\n        };\n        var series = [];\n        [['北京市', chinaDatas]].forEach(function(item, i) {\n            console.log(item)\n            series.push({\n                    type: 'lines',\n                    zlevel: 2,\n                    effect: {\n                        show: true,\n                        period: 4, //箭头指向速度，值越小速度越快\n                        trailLength: 0.02, //特效尾迹长度[0,1]值越大，尾迹越长重\n                        symbol: 'arrow', //箭头图标\n                        symbolSize: 5, //图标大小\n                    },\n                    lineStyle: {\n                        normal: {\n                            width: 1, //尾迹线条宽度\n                            opacity: 1, //尾迹线条透明度\n                            curveness: .3 //尾迹线条曲直度\n                        }\n                    },\n                    data: convertData(item[1])\n                }, {\n                    type: 'effectScatter',\n                    coordinateSystem: 'geo',\n                    zlevel: 2,\n                    rippleEffect: { //涟漪特效\n                        period: 4, //动画时间，值越小速度越快\n                        brushType: 'stroke', //波纹绘制方式 stroke, fill\n                        scale: 4 //波纹圆环最大限制，值越大波纹越大\n                    },\n                    label: {\n                        normal: {\n                            show: true,\n                            position: 'right', //显示位置\n                            offset: [5, 0], //偏移设置\n                            formatter: function(params){//圆环显示文字\n                                return params.data.name;\n                            },\n                            fontSize: 13\n                        },\n                        emphasis: {\n                            show: true\n                        }\n                    },\n                    symbol: 'circle',\n                    symbolSize: function(val) {\n                        return 5+ val[2] * 5; //圆环大小\n                    },\n                    itemStyle: {\n                        normal: {\n                            show: false,\n                            color: '#f00'\n                        }\n                    },\n                    data: item[1].map(function(dataItem) {\n                        return {\n                            name: dataItem[0].name,\n                            value: chinaGeoCoordMap[dataItem[0].name].concat([dataItem[0].value])\n                        };\n                    }),\n                },\n                //被攻击点\n                {\n                    type: 'scatter',\n                    coordinateSystem: 'geo',\n                    zlevel: 2,\n                    rippleEffect: {\n                        period: 4,\n                        brushType: 'stroke',\n                        scale: 4\n                    },\n                    label: {\n                        normal: {\n                            show: true,\n                            position: 'right',\n                            //offset:[5, 0],\n                            color: '#0f0',\n                            formatter: '{b}',\n                            textStyle: {\n                                color: \"#0f0\"\n                            }\n                        },\n                        emphasis: {\n                            show: true,\n                            color: \"#f60\"\n                        }\n                    },\n                    symbol: 'pin',\n                    symbolSize: 50,\n                    data: [{\n                        name: item[0],\n                        value: chinaGeoCoordMap[item[0]].concat([10]),\n                    }],\n                }\n            );\n        });\n\n        let option = {\n            tooltip: {\n                trigger: 'item',\n                backgroundColor: 'rgba(166, 200, 76, 0.82)',\n                borderColor: '#FFFFCC',\n                showDelay: 0,\n                hideDelay: 0,\n                enterable: true,\n                transitionDuration: 0,\n                extraCssText: 'z-index:100',\n                formatter: function(params, ticket, callback) {\n                    //根据业务自己拓展要显示的内容\n                    var res = \"\";\n                    var name = params.name;\n                    var value = params.value[params.seriesIndex + 1];\n                    res = \"<span style='color:#fff;'>\" + name + \"</span><br/>数据：\" + value;\n                    return res;\n                }\n            },\n            backgroundColor:\"#013954\",\n            visualMap: { //图例值控制\n                min: 0,\n                max: 1,\n                calculable: true,\n                show: true,\n                color: ['#f44336', '#fc9700', '#ffde00', '#ffde00', '#00eaff'],\n                textStyle: {\n                    color: '#fff'\n                }\n            },\n            geo: {\n                map: 'world',\n                zoom: 1.2,\n                label: {\n                    emphasis: {\n                        show: false                                                                                                                   \n                    }\n                },\n                roam: true, //是否允许缩放\n                itemStyle: {\n                    normal: {\n                        color: 'rgba(51, 69, 89, .5)', //地图背景色\n                        borderColor: '#516a89', //省市边界线00fcff 516a89\n                        borderWidth: 1\n                    },\n                    emphasis: {\n                        color: 'rgba(37, 43, 61, .5)' //悬浮背景\n                    }\n                }\n            },\n            series: series\n        };\n        myChart.setOption(option);\n    })\n\n    return(\n        <div ref={Echarts} style={{width: '100%', height: '100%'}}></div>\n    )\n}\n\nexport default draw;","import React, { Component } from 'react';\nimport './index.scss';\nclass Shuiqiu extends Component{\n\n    componentDidMount(){\n    \n    }\n\n\n    render(){\n        return(\n            <div className=\"shuiqiu\">\n                <div className=\"shuiqiucontent\">\n                    <div className=\"shui shui1\"></div>\n                    <div className=\"shui shui2\"></div>\n                    <div className=\"shui shui3\"></div>\n                    <div className=\"shui shui4\"></div>\n                    <div className=\"shui shui5\"></div>\n                    <div className=\"shui shui6\"></div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Shuiqiu;","import React, { useEffect } from 'react';\nimport './index.scss';\n\nconst data = [\n    {key: '刘国栋', value: Math.random()*100},\n    {key: '刘翔', value: Math.random()*100},\n    {key: '高彦涛', value: Math.random()*100},\n    {key: '郑力鹏', value: Math.random()*100},\n    {key: '曾侃', value: Math.random()*100},\n    {key: '海天盛筵', value: Math.random()*100},\n    {key: '结婚', value: Math.random()*100},\n    {key: '离婚', value: Math.random()*100},\n    {key: '儿子', value: Math.random()*100},\n    {key: '串串', value: Math.random()*100},\n    {key: '电脑', value: Math.random()*100},\n    {key: '手机', value: Math.random()*100},\n    {key: '王李丹妮', value: Math.random()*100},\n    {key: '三国演义', value: Math.random()*100},\n    {key: '水浒传', value: Math.random()*100},\n    {key: '西游记', value: Math.random()*100},\n    {key: '红楼梦', value: Math.random()*100},\n    {key: '唐吉坷德', value: Math.random()*100},\n    {key: '汤姆', value: Math.random()*100},\n    {key: '杰瑞', value: Math.random()*100},\n    {key: '熊大', value: Math.random()*100},\n    {key: '光头强', value: Math.random()*100},\n    {key: '大白', value: Math.random()*100},\n    {key: '傻白甜', value: Math.random()*100},\n    {key: '高富帅', value: Math.random()*100},\n]\nvar mcList = [];\nvar radius = 180;\nvar sa, ca, sb, cb, sc, cc, oDiv, aA = null, dtr = Math.PI/180;\nvar distr = true;\nvar active = false;\nvar mouseX = 0, mouseY = 0;\nvar size = 250, tspeed = 20;\nvar lasta = 1, lastb = 1;\nvar howElliptical = 1, d = 600;\n\nlet update = () => {\n    let a,b;\n    if(active){\n        a = (-Math.min( Math.max( -mouseY, -size), size) / radius) * tspeed;\n        b = (Math.min( Math.max( -mouseX, -size ), size ) / radius ) * tspeed;\n    }else{\n        a = lasta * 1\n        b = lastb * 1\n    }\n\n    lasta = a;\n    lastb = b;\n\n    if(Math.abs(a) <= 0.01 && Math.abs(b) <= 0.01){\n        return;\n    }\n\n    let c = 0;\n    sineCosine(a, b, c);\n\n    for(let j=0; j<mcList.length; j++){\n        let rx1=mcList[j].cx;\n\t\tlet ry1=mcList[j].cy*ca+mcList[j].cz*(-sa);\n\t\tlet rz1=mcList[j].cy*sa+mcList[j].cz*ca;\n\t\t\n\t\tlet rx2=rx1*cb+rz1*sb;\n\t\tlet ry2=ry1;\n\t\tlet rz2=rx1*(-sb)+rz1*cb;\n\t\t\n\t\tlet rx3=rx2*cc+ry2*(-sc);\n\t\tlet ry3=rx2*sc+ry2*cc;\n\t\tlet rz3=rz2;\n\t\t\n\t\tmcList[j].cx=rx3;\n\t\tmcList[j].cy=ry3;\n\t\tmcList[j].cz=rz3;\n\t\t\n\t\tlet per= d / ( d+rz3 );\n\t\t\n\t\tmcList[j].x = ( howElliptical*rx3*per ) - ( howElliptical * 2 );\n\t\tmcList[j].y=ry3*per;\n\t\tmcList[j].scale=per;\n        mcList[j].alpha=per;\n        \n        mcList[j].alpha = (mcList[j].alpha-0.6) * (10 / 6);\n    }\n\n    doPosition();\n    depthSort();\n}\n\nlet depthSort = () => {\n    var i=0;\n\tvar aTmp=[];\n\t\n\tfor(i=0;i<aA.length;i++)\n\t{\n\t\taTmp.push(aA[i]);\n\t}\n\t\n\taTmp.sort(function (vItem1, vItem2)\n\t\t{\n\t\t\tif(vItem1.cz>vItem2.cz)\n\t\t\t{\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\telse if(vItem1.cz<vItem2.cz)\n\t\t\t{\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t);\n\t\n\tfor(i=0;i<aTmp.length;i++)\n\t{\n\t\taTmp[i].style.zIndex=i;\n\t}\n}\n\nlet doPosition = () => {\n    var l=oDiv.offsetWidth/2;\n\tvar t=oDiv.offsetHeight/2;\n\tfor(var i=0;i<mcList.length;i++)\n\t{\n\t\taA[i].style.left=mcList[i].cx+l-mcList[i].offsetWidth/2+'px';\n\t\taA[i].style.top=mcList[i].cy+t-mcList[i].offsetHeight/2+'px';\n\t\t//aA[i].style.fontSize=Math.ceil(12*mcList[i].scale/2)+8+'px';\n\t\taA[i].style.filter=\"alpha(opacity=\"+100*mcList[i].alpha+\")\";\n\t\taA[i].style.opacity=mcList[i].alpha;\n\t}\n}\n\nlet sineCosine = (a, b, c) => {\n    sa = Math.sin(a * dtr);\n    ca = Math.cos(a * dtr);\n    sb = Math.sin(b * dtr);\n    cb = Math.cos(b * dtr);\n    sc = Math.sin(c * dtr);\n    cc = Math.cos(c * dtr);\n}\n\nlet positionAll = () => {\n    let phi = 0;\n    let theta = 0;\n    let max = mcList.length;\n    let i = 0;\n\n    let aTmp = [];\n    let oFragment = document.createDocumentFragment()\n\n    for(i=0; i<aA.length; i++){\n        aTmp.push(aA[i]);\n    }\n\n    aTmp.sort(\n        function(){\n            return Math.random()< 0.5 ? 1 : -1\n        }\n    )\n\n    for(i = 0; i<aTmp.length; i++){\n        oFragment.appendChild(aTmp[i]);\n    }\n\n    oDiv.appendChild(oFragment);\n\n    for(i=1; i< max +1 ; i++){\n        if(distr){\n            phi = Math.acos(-1 + (2*i-1)/ max);\n            theta = Math.sqrt(max*Math.PI)*phi;\n        }else{\n            phi = Math.random()*(Math.PI);\n\t\t\ttheta = Math.random()*(2*Math.PI);\n        }\n\n        mcList[i-1].cx = radius * Math.cos(theta)*Math.sin(phi);\n\t\tmcList[i-1].cy = radius * Math.sin(theta)*Math.sin(phi);\n\t\tmcList[i-1].cz = radius * Math.cos(phi);\n\t\t\n\t\taA[i-1].style.left=mcList[i-1].cx+oDiv.offsetWidth/2-mcList[i-1].offsetWidth/2+'px';\n\t\taA[i-1].style.top=mcList[i-1].cy+oDiv.offsetHeight/2-mcList[i-1].offsetHeight/2+'px';\n\n    }\n\n}\n\nconst WordCloud = (props) => {\n\n    useEffect(() => {\n        let container = document.getElementsByClassName('wordcloud3')[0];\n        \n        // let { width, height } = container.getBoundingClientRect();\n\n        let items = [];\n        data.forEach(item => {\n            items.push(`<a href=\"#\" style=font-size:\"${item.value}px\">${item.key}</a>`)\n        })\n        // 添加元素到container\n        let div = document.createElement('div');\n        div.id = 'div1';\n        div.style.border = 'solid 2px black';\n        div.style.align = 'center';\n        div.innerHTML = items.join( \"\" )\n        container.appendChild(div);\n    })\n\n    useEffect(() => {\n        let oTag = null;\n        oDiv = document.getElementById('div1');\n        aA = oDiv.getElementsByTagName('a');\n        for(let i=0; i< aA.length; i++){\n            oTag = {};\n            oTag.offsetWidth = aA[i].offsetWidth;\n            oTag.offsetHeight = aA[i].offsetHeight;\n            mcList.push(oTag);\n        }\n        \n        sineCosine(0, 0, 0)\n\n        positionAll();\n\n        oDiv.onmouseover = function() {\n            console.log(\"33334433344\", active);\n            active = true;\n        }\n        oDiv.onmouseout = function() {\n            active = false\n        }\n\n        oDiv.onmousemove = function(ev) {\n            var oEvent = window.event || ev;\n\n            mouseX = oEvent.clientX - (oDiv.offsetLeft + oDiv.offsetWidth/2);\n            mouseY = oEvent.clientY - (oDiv.offsetTop + oDiv.offsetHeight/2);\n\n            console.log(\"333334445566\", mouseX, mouseY);\n\n            mouseX /= 5;\n            mouseY /= 5;\n        };\n\n        setInterval(update, 30);\n\n    })\n\n    return(\n        <div style={props.style} className=\"wordcloud3\">\n            \n        </div>\n    )\n}\n\nexport default WordCloud;","import React, { Component} from 'react';\nimport Ecard from '../components/eCard';\nimport Bar from '../components/echarts/bar';\nimport Line from '../components/echarts/line';\nimport Lines from '../components/echarts/lines';\nimport Map from '../components/echarts/map';\nimport WordCloud from '../components/wordcloud3d';\nimport Shuiqiu from '../components/echarts/shuiqiu';\n\nimport '../index.css';\n\n// const EchartsDraw = () => {\n//     const [count, setCount] = useState(0);\n//     useEffect(() => {\n//         document.title = `You clicked ${count} times`;\n//     });\n//     return (\n//         <div>\n//             <p>You clicked { count } times</p>\n//             <button onClick={() => setCount(count + 1 )}>\n//             Click me\n//             </button>\n//         </div>\n//     )\n// }\n\nexport default class EchartsDraw extends Component{\n\n    componentDidMount(){\n        console.log(this.props.match.params);\n    }\n\n    render(){\n        return(\n            <div className=\"echarts-container\">\n                <Ecard><Bar /></Ecard>\n                <Ecard><Line /></Ecard>\n                <Ecard><Lines /></Ecard>\n                <Ecard><Map /></Ecard>\n                <Ecard><Shuiqiu /></Ecard>\n                {/* <WordCloud style={{width: 400, height: 400}}/> */}\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\n\nexport default class RxjsTest extends Component{\n\n    componentDidMount(){\n       \n    }\n\n    render(){\n        return(\n            <div id=\"traffic-light\">前端测试</div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport './index.scss';\nimport Image1 from './images/event_1_large.jpg';\nimport Image2 from './images/event_2_large.jpg';\nimport Image3 from './images/event_3_large.jpg';\nimport Image4 from './images/event_4_large.jpg';\nimport Image5 from './images/event_5_large.jpg';\n\n const Swiper = window.Swiper;\n\nexport default class Banner extends Component{\n    constructor(props){\n        super(props);\n        this.swiper = null;\n    }\n\n    componentDidMount(){\n        this.swiper = new Swiper(this.container, {\n            autoplay: true,//可选选项，自动滑动\n        })\n    }\n\n    render(){\n        return(\n            <div className=\"apple-retai\">\n                <div className=\"swiper-container\" ref={el => this.container = el}>\n                <div className=\"swiper-wrapper\">\n                    <div className=\"swiper-slide\">Slide 1</div>\n                    <div className=\"swiper-slide\">Slide 2</div>\n                    <div className=\"swiper-slide\">Slide 3</div>\n                </div>\n                <div className=\"swiper-pagination\"></div>\n                \n                <div className=\"swiper-button-prev\"></div>\n                <div className=\"swiper-button-next\"></div>\n                \n                <div className=\"swiper-scrollbar\"></div>\n                </div>\n            </div>\n        )\n    }\n} ","import React, { Component } from 'react';\n\nexport default class Head extends Component{\n    constructor(props){\n        super(props)\n    }\n\n    componentDidMount(){\n        \n    }\n\n    render(){\n        return(\n            <div className=\"header-box\">\n                div\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\n\nexport default class Block extends Component{\n    constructor(props){\n        super(props);\n        this.canvas = this.props.canvas;\n        this.left = this.props.left;\n        this.top = this.props.top;\n        this.avW = this.props.avW;\n        this.avH = this.props.avH;\n    }\n    componentDidMount(){\n        this.init()\n    }\n\n    init = () =>{\n        \n    }\n\n    render(){\n        return(<canvas ref={el => this.canvas = el} ></canvas>)\n    }\n}","import React, { Component } from 'react';\nimport './index.scss';\n\nexport default class Demo2048 extends Component{\n    constructor(props){\n        super(props)\n        this.data = null;\n        this.ctx = null;\n        this.width = null;\n        this.height = null;\n        this.box_width = null;\n        this.margin_width = null;\n        this.digital = [];\n    }\n    componentDidMount(){\n        this.ctx = this.container.getContext('2d');\n\n        this.width = this.ctx.canvas.width;\n        this.height = this.ctx.canvas.height;\n\n        this.box_width = this.width*0.8*0.25;\n        this.margin_width = this.width*0.2*0.20;\n\n        this.getDigital();\n\n        this.createRandom();\n        this.drawBack();\n        this.drawDigital();\n\n        window.addEventListener('keydown', (event) => {\n            let e = event || window.event;\n            // console.log(\"ffffffff\", e.keyCode);\n            this.judgeKeyCode(e.keyCode)\n        })        \n\n    }\n    judgeKeyCode = (keyCode) => {\n        if(keyCode === 37){\n            for(let i = 0; i < 4; i++){\n                let arr = [];\n                arr[0] = this.digital[0][i];\n                arr[1] = this.digital[1][i];\n                arr[2] = this.digital[2][i];\n                arr[3] = this.digital[3][i];\n                if(!this.checkDigital(arr)){\n                    arr=this.changeDigital(arr);\n                }\n                this.digital[0][i]=arr[0];\n                this.digital[1][i]=arr[1];\n                this.digital[2][i]=arr[2];\n                this.digital[3][i]=arr[3];\n            }\n\n            if (false) {\n                alert(\"GAME OVER\");\n            }else{\n                this.ctx.clearRect(0, 0, this.width, this.height);\n                this.createRandom();\n                this.drawBack();\n                this.drawDigital();\n            }\n        }else if(keyCode === 38){\n            for(let i = 0; i < 4; i++){\n                let arr = [];\n                arr[0] = this.digital[i][0];\n                arr[1] = this.digital[i][1];\n                arr[2] = this.digital[i][2];\n                arr[3] = this.digital[i][3];\n                if(!this.checkDigital(arr)){\n                    arr=this.changeDigital(arr);\n                }\n                this.digital[i][0]=arr[0];\n                this.digital[i][1]=arr[1];\n                this.digital[i][2]=arr[2];\n                this.digital[i][3]=arr[3];\n            }\n\n            if (false) {\n                alert(\"GAME OVER\");\n            }else{\n                this.ctx.clearRect(0, 0, this.width, this.height);\n                this.createRandom();\n                this.drawBack();\n                this.drawDigital();\n            }\n        }else if(keyCode === 39){\n            for(let i = 0; i < 4; i++){\n                let arr = [];\n                arr[0] = this.digital[3][i];\n                arr[1] = this.digital[2][i];\n                arr[2] = this.digital[1][i];\n                arr[3] = this.digital[0][i];\n                if(!this.checkDigital(arr)){\n                    arr=this.changeDigital(arr);\n                }\n                this.digital[3][i]=arr[0];\n                this.digital[2][i]=arr[1];\n                this.digital[1][i]=arr[2];\n                this.digital[0][i]=arr[3];\n            }\n\n            if (false) {\n                alert(\"GAME OVER\");\n            }else{\n                this.ctx.clearRect(0, 0, this.width, this.height);\n                this.createRandom();\n                this.drawBack();\n                this.drawDigital();\n            }\n        }else if(keyCode === 40){\n            for(let i = 0; i < 4; i++){\n                let arr = [];\n                arr[0] = this.digital[i][3];\n                arr[1] = this.digital[i][2];\n                arr[2] = this.digital[i][1];\n                arr[3] = this.digital[i][0];\n                if(!this.checkDigital(arr)){\n                    arr=this.changeDigital(arr);\n                }\n                this.digital[i][3]=arr[0];\n                this.digital[i][2]=arr[1];\n                this.digital[i][1]=arr[2];\n                this.digital[i][0]=arr[3];\n            }\n\n            if (false) {\n                alert(\"GAME OVER\");\n            }else{\n                this.ctx.clearRect(0, 0, this.width, this.height);\n                this.createRandom();\n                this.drawBack();\n                this.drawDigital();\n            }\n        }\n    }  \n\n    getDigital = () =>{\n        for(let i=0; i < 4; i++){\n            this.digital[i] = [];\n            for (let j = 0; j < 4; j++){\n                this.digital[i][j] = 0;\n            }\n        }\n    }\n    // 绘制小方块\n    drawRect = (x, y, c) => {\n        this.ctx.beginPath();\n        this.ctx.fillStyle=c;\n        this.ctx.moveTo(x,y);\n        this.ctx.arcTo(x+this.box_width,y,x+this.box_width,y+1,this.margin_width*0.7);\n        this.ctx.arcTo(x+this.box_width,y+this.box_width,x+this.box_width-1,y+this.box_width,this.margin_width*0.7);\n        this.ctx.arcTo(x,y+this.box_width,x,y+this.box_width-1,this.margin_width*0.7);\n        this.ctx.arcTo(x,y,x+1,y,this.margin_width*0.7);\n        this.ctx.fill();\n    }\n    // 绘制背景\n    drawBack = () => {\n        this.ctx.beginPath();\n        this.ctx.fillStyle = '#f0d799';\n        this.ctx.fillRect(0, 0, this.width, this.height);\n        for(let i = 0; i < 4; i++){\n            for(let j = 0; j < 4; j++){\n                let c = '';\n                if(this.digital[i][j]==0){c=\"#D7C184 \";}\n                if(this.digital[i][j]==2){c=\"#f5bb82 \";}\n                if(this.digital[i][j]==4){c=\"#DBB280 \";}\n                if(this.digital[i][j]==8){c=\"#E1C57A \";}\n                if(this.digital[i][j]==16){c=\"#E8B173 \";}\n                if(this.digital[i][j]==32){c=\"#F2A769 \";}\n                if(this.digital[i][j]==64){c=\"#e08931 \";}\n                if(this.digital[i][j]==128){c=\"#f27f0c \";}\n                if(this.digital[i][j]==256){c=\"#f76063 \";}\n                if(this.digital[i][j]==512){c=\"#e84648 \";}\n                if(this.digital[i][j]==1024){c=\"#b03133 \";}\n                if(this.digital[i][j]==2048){c=\"#fc080c \";}\n                let x=this.margin_width+i*(this.box_width+this.margin_width);\n                let y=this.margin_width+j*(this.box_width+this.margin_width);\n                this.drawRect(x,y,c);\n            }\n        }\n    }\n    // 生成随机数\n    createRandom = () => {\n        let x = Math.round( Math.random() * 3 )\n        let y = Math.round( Math.random() * 3 )\n\n        if(this.digital[x][y] === 0){\n            this.digital[x][y] = 2\n        }else{\n            this.createRandom();\n        }\n\n    }\n    // 绘制数字\n    drawDigital = () => {\n        for(let i = 0; i < 4; i++){\n            for(let j = 0; j < 4; j++){\n                if(this.digital[i][j] > 0){\n                    this.ctx.beginPath();\n                    this.ctx.textAlign = 'center';\n                    this.ctx.textBaseline = 'middle';\n                    this.ctx.fillStyle = 'red';\n                    this.ctx.font = '40px Arial';\n                    let x = this.margin_width + i * ( this.box_width + this.margin_width ) + this.box_width / 2;\n                    let y = this.margin_width + j * ( this.box_width + this.margin_width ) + this.box_width / 2;\n                    this.ctx.fillText(this.digital[i][j], x, y);\n                }\n            }\n        }\n    }\n    // 判断数组是否已经按列排好\n    checkDigital = (arr) => {\n        var flag=false;\n        if (arr[0] === 0 && arr[1] === 0 && arr[2] === 0 && arr[3] === 0||\n                arr[0] > 0 && arr[1] === 0 && arr[2] === 0 && arr[3] === 0||\n                arr[0] > 0 && arr[1] > 0 && arr[2] === 0 && arr[3] === 0||\n                arr[0] > 0 && arr[1] > 0 && arr[2] > 0 && arr[3] === 0||\n                arr[0] > 0 && arr[1] > 0 && arr[2] > 0 && arr[3] > 0) {\n            flag=true;\n        }\n        if (arr[0] === arr[1] && arr[0] !== 0 ||\n            arr[1] === arr[2] && arr[1] !== 0 ||\n            arr[2] === arr[3] && arr[2] !== 0 ||\n            arr[3] === arr[4] && arr[3] !== 0\n        ) {\n            flag=false;\n        }\n        return flag;\n    }\n\n    changeDigital = (arr) => {\n        for ( let i = 0; i <3; i++) {\n\t\t\tif (arr[i]==0) {\n\t\t\t\tvar temp=arr[i];\n\t\t\t\tarr[i]=arr[i+1];\n\t\t\t\tarr[i+1]=temp;\n\t\t\t}\n\t\t\tif (arr[i]==arr[i+1]&&arr[i]!=0) {\n\t\t\t\tarr[i]=arr[i]+arr[i+1];\n\t\t\t\tarr[i+1]=0;\n\t\t\t}\t\t\n\t\t}\n\t\tif (this.checkDigital(arr)){\n\t\t\treturn arr;\n\t\t}else{\n\t\t\treturn this.changeDigital(arr);\n\t\t}\n    }\n\n\n\n\n    render(){\n        return(\n            <canvas ref={el => this.container = el} width=\"500\" height=\"500\"></canvas>\n        )\n    }\n}","import React, { Component } from 'react';\nimport Block from './block';\nimport Ima1 from './1.jpg';\n\nexport default class DemoPinTu extends Component{\n    constructor(props){\n        super(props)\n        this.ctx = null;\n        this.blocks = [];\n        this.avw = null;\n        this.avH = null;\n        this.number = 3;\n        this.canvas = null;\n    }\n    componentDidMount(){\n        this.canvas = document.createElement('canvas');\n\n        this.canvas.width = parseInt(this.container.style.width);\n        this.canvas.height = parseInt(this.container.style.height);\n\n        this.container.appendChild(this.canvas);\n\n        this.ctx = this.canvas.getContext('2d');\n        let img = new Image();\n        img.onload = () => {\n            this.ctx.drawImage(img, 0, 0, 500, 500);\n        }\n        img.src = Ima1;\n\n        this.clipImage();\n    }\n\n    clipImage = () => {\n        this.avW = parseInt(this.container.style.width) / this.number;\n        this.avH = parseInt(this.container.style.height) / this.number;\n\n        for(let i = 0; i < this.number; i++){\n            for (let j = 0; j < this.number; j++){\n                this.blocks[i] = this.blocks[i] || [];\n                let canvas = document.createElement(\"canvas\");\n                canvas.width = this.avW;\n                canvas.height = this.avH;\n                canvas.x = j;\n                canvas.y = i;\n                canvas.map = i + '_' + j;\n                canvas.correctMap = i + '_' + j;\n                let imageData = this.ctx.getImageData(j * this.avW, i * this.avH, this.avW, this.avH)\n                canvas.getContext(\"2d\").putImageData( imageData, 0, 0 );\n                if( i === j && j=== (this.number-1) )break;\n                // 把canvas放到二维数组blocks中;\n                this.blocks[i][j] =  canvas;\n            }\n        }\n\n        console.log(\"djdhdhdhdhdh\", this.blocks);\n\n        this.renderToDom();\n    }\n    renderToDom = () =>{\n        this.container.innerHTML = \"\";\n        this.maps = {};\n        this.doms = [];\n        this.instances = [];\n        this.blocks.forEach((item, i) => {\n            item.forEach((item1, j) => {\n                let instances = this.initBlock(item1, j, i, this.avW, this.avH)\n                this.instances.push(instances);\n                this.maps[i + '_' +j] = true\n            })\n        })\n    }\n\n    initBlock = (canvas, left, top, avW, avH) =>{\n        return(<Block\n            canvas = {canvas}\n            left = {left}\n            top = {top}\n            avW = {avW}\n            avH = {avH}\n            />)\n    }\n\n    render(){\n        return(<div ref={el => this.container = el} style={{width: 500, height: 500}}></div>)\n    }\n} ","import React, { Component } from 'react';\nimport Head from '../components_common/head';\nimport Banner from '../components_common/banner';\nimport Demo2048 from '../components_common/demo2048';\nimport DemoPinTu from '../components_common/demoPintu';\n\nexport default class Components extends Component{\n    render(){\n\n        console.log(\"33334234323\", window.Swiper);\n\n        return(\n            <div className=\"components\">\n                {/* <Head /> */}\n                {/* <Banner /> */}\n                {/* <Demo2048 /> */}\n                <DemoPinTu />\n            </div>\n        )\n    }\n}","import React from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\n\nimport App from '../App';\nimport Amap from '../containers/amap';\nimport DashBoard from '../containers/dashboard';\nimport EchartsDraw from '../containers/echarts';\nimport RxjsTest from '../containers/rxTest';\nimport Components from '../containers/component';\n\nconst BasicRoute = () => (\n    <HashRouter>\n        <Route exact path=\"/\" component={Components}></Route>\n        <Route exact path=\"/app\" component={App}></Route>\n        <Route exact path=\"/amap\" component={Amap}></Route>\n        <Route exact path=\"/dashboard\" component={DashBoard} />\n        <Route path=\"/echarts\" component={EchartsDraw}  />\n        <Route path=\"/rx\" component={RxjsTest}  />\n    </HashRouter>\n)\n\nexport default BasicRoute;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport BasicRoute from './route';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<BasicRoute />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}