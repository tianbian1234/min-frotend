{"ast":null,"code":"import _classCallCheck from \"/Users/a/min_frotend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/a/min_frotend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/a/min_frotend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/a/min_frotend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/a/min_frotend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/a/min_frotend/src/components_common/demoPintu/index.js\";\nimport React, { Component } from 'react';\nimport Ima1 from './1.jpg';\n\nvar DemoPinTu =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DemoPinTu, _Component);\n\n  function DemoPinTu(props) {\n    var _this;\n\n    _classCallCheck(this, DemoPinTu);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DemoPinTu).call(this, props));\n\n    _this.clipImage = function () {\n      _this.avW = _this.container.style.width / _this.number;\n      _this.avH = _this.container.style.height / _this.number;\n\n      for (var i = 0; i < _this.number; i++) {\n        for (var j = 0; j < _this.number; j++) {\n          _this.blocks[i] = _this.blocks[i] || [];\n          var canvas = document.createElement(\"canvas\");\n          canvas.width = _this.avW;\n          canvas.height = _this.avH;\n          canvas.x = j;\n          canvas.y = i;\n          canvas.map = i + '_' + j;\n          canvas.correctMap = i + '_' + j;\n\n          var imageData = _this.ctx.getImageData(j * _this.avW, i * _this.avH, _this.avW, _this.avH);\n\n          canvas.getContext(\"2d\").putImageData(imageData, 0, 0);\n          if (i === j && j === _this.number - 1) break; // 把canvas放到二维数组blocks中;\n\n          _this.blocks[i][j] = canvas;\n        }\n      }\n\n      console.log(\"djdhdhdhdhdh\", _this.blocks);\n\n      _this.renderToDom();\n    };\n\n    _this.renderToDom = function () {};\n\n    _this.ctx = null;\n    _this.blocks = [];\n    _this.avw = null;\n    _this.avH = null;\n    _this.number = 3;\n    _this.canvas = null;\n    return _this;\n  }\n\n  _createClass(DemoPinTu, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.canvas = document.createElement('canvas');\n      console.log(\"33333344456765456\", parseInt(this.container.style.width));\n      this.canvas.width = parseInt(this.container.style.width);\n      this.canvas.height = parseInt(this.container.style.height);\n      console.log(\"3333333333\", this.canvas.width); // this.container.appendChild(this.canvas);\n\n      this.ctx = this.canvas.getContext('2d');\n      var img = new Image();\n\n      img.onload = function () {\n        _this2.ctx.drawImage(img, 0, 0, 500, 500);\n      };\n\n      img.src = Ima1;\n      this.clipImage();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        ref: function ref(el) {\n          return _this3.container = el;\n        },\n        style: {\n          width: 500,\n          height: 500\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return DemoPinTu;\n}(Component);\n\nexport { DemoPinTu as default };","map":{"version":3,"sources":["/Users/a/min_frotend/src/components_common/demoPintu/index.js"],"names":["React","Component","Ima1","DemoPinTu","props","clipImage","avW","container","style","width","number","avH","height","i","j","blocks","canvas","document","createElement","x","y","map","correctMap","imageData","ctx","getImageData","getContext","putImageData","console","log","renderToDom","avw","parseInt","img","Image","onload","drawImage","src","el"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Ima1 from './1.jpg';\n\nexport default class DemoPinTu extends Component{\n    constructor(props){\n        super(props)\n        this.ctx = null;\n        this.blocks = [];\n        this.avw = null;\n        this.avH = null;\n        this.number = 3;\n        this.canvas = null;\n    }\n    componentDidMount(){\n        this.canvas = document.createElement('canvas');\n        console.log(\"33333344456765456\", parseInt(this.container.style.width));\n        this.canvas.width = parseInt(this.container.style.width);\n        this.canvas.height = parseInt(this.container.style.height);\n\n        console.log(\"3333333333\", this.canvas.width);\n\n        // this.container.appendChild(this.canvas);\n\n        this.ctx = this.canvas.getContext('2d');\n        let img = new Image();\n        img.onload = () => {\n            this.ctx.drawImage(img, 0, 0, 500, 500);\n        }\n        img.src = Ima1;\n\n        this.clipImage();\n    }\n\n    clipImage = () => {\n        this.avW = this.container.style.width / this.number;\n        this.avH = this.container.style.height / this.number;\n\n        for(let i = 0; i < this.number; i++){\n            for (let j = 0; j < this.number; j++){\n                this.blocks[i] = this.blocks[i] || [];\n                let canvas = document.createElement(\"canvas\");\n                canvas.width = this.avW;\n                canvas.height = this.avH;\n                canvas.x = j;\n                canvas.y = i;\n                canvas.map = i + '_' + j;\n                canvas.correctMap = i + '_' + j;\n                let imageData = this.ctx.getImageData(j * this.avW, i * this.avH, this.avW, this.avH)\n                canvas.getContext(\"2d\").putImageData( imageData, 0, 0 );\n                if( i === j && j=== (this.number-1) )break;\n                // 把canvas放到二维数组blocks中;\n                this.blocks[i][j] =  canvas;\n            }\n        }\n\n        console.log(\"djdhdhdhdhdh\", this.blocks);\n\n        this.renderToDom();\n    }\n    renderToDom = () =>{\n\n    }\n\n    render(){\n        return(<div ref={el => this.container = el} style={{width: 500, height: 500}}></div>)\n    }\n} "]},"metadata":{},"sourceType":"module"}