{"ast":null,"code":"import _classCallCheck from \"/Users/a/min_frotend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/a/min_frotend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/a/min_frotend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/a/min_frotend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/a/min_frotend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/a/min_frotend/src/components/wordcloud/index.js\";\nimport React, { Component } from 'react';\nimport echarts from '../../../node_modules/echarts/lib/echarts';\nimport '../../../node_modules/echarts-wordcloud';\n\nvar WordCloud =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(WordCloud, _Component);\n\n  function WordCloud(props) {\n    var _this;\n\n    _classCallCheck(this, WordCloud);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(WordCloud).call(this, props));\n\n    _this.drawWordcloud = function () {\n      var option = {\n        title: {\n          text: '词云',\n          //标题\n          x: 'center',\n          textStyle: {\n            fontSize: 23\n          }\n        },\n        backgroundColor: 'rgba(0,0,0,0)',\n        tooltip: {\n          show: true\n        },\n        series: [{\n          name: '热点分析',\n          //数据提示窗标题\n          type: 'wordCloud',\n          sizeRange: [6, 66],\n          //画布范围，如果设置太大会出现少词（溢出屏幕）\n          rotationRange: [-45, 90],\n          //数据翻转范围\n          //shape: 'circle',\n          textPadding: 0,\n          autoSize: {\n            enable: true,\n            minSize: 6\n          },\n          textStyle: {\n            normal: {\n              color: function color() {\n                return 'rgb(' + [Math.round(Math.random() * 160), Math.round(Math.random() * 160), Math.round(Math.random() * 160)].join(',') + ')';\n              }\n            },\n            emphasis: {\n              shadowBlur: 10,\n              shadowColor: '#333'\n            }\n          },\n          data: [{\n            name: \"数据一\",\n            value: 1000\n          }, {\n            name: \"数据二\",\n            value: 520\n          }, {\n            name: \"数据一\",\n            value: 1000\n          }, {\n            name: \"数据二\",\n            value: 520\n          }, {\n            name: \"数据一\",\n            value: 1000\n          }, {\n            name: \"数据二\",\n            value: 520\n          }, {\n            name: \"数据一\",\n            value: 1000\n          }, {\n            name: \"数据二\",\n            value: 520\n          }]\n        }]\n      };\n\n      _this.myChart.setOption(option);\n    };\n\n    _this.state = {\n      canvasWH: _this.props.canvasWH\n    };\n    return _this;\n  }\n\n  _createClass(WordCloud, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.myChart = echarts.init(document.getElementsByClassName('widget-box')[0]);\n      this.drawWordcloud();\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (JSON.stringify(this.props.canvasWH) !== JSON.stringify(nextProps.canvasWH)) {\n        this.setState({\n          canvasWH: nextProps.canvasWH\n        });\n        this.myChart.resize();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"widget-box\",\n        style: {\n          width: '100%',\n          height: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return WordCloud;\n}(Component);\n\nexport { WordCloud as default };","map":{"version":3,"sources":["/Users/a/min_frotend/src/components/wordcloud/index.js"],"names":["React","Component","echarts","WordCloud","props","drawWordcloud","option","title","text","x","textStyle","fontSize","backgroundColor","tooltip","show","series","name","type","sizeRange","rotationRange","textPadding","autoSize","enable","minSize","normal","color","Math","round","random","join","emphasis","shadowBlur","shadowColor","data","value","myChart","setOption","state","canvasWH","init","document","getElementsByClassName","nextProps","JSON","stringify","setState","resize","width","height"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport echarts from '../../../node_modules/echarts/lib/echarts'\nimport '../../../node_modules/echarts-wordcloud';\n\nexport default class WordCloud extends Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            canvasWH: this.props.canvasWH\n        }\n    }\n    drawWordcloud = () => {\n        let option ={\n            title: {\n                text: '词云',//标题\n                x: 'center',\n                textStyle: {\n                    fontSize: 23\n                }\n         \n            },\n            backgroundColor: 'rgba(0,0,0,0)',\n            tooltip: {\n                show: true\n            },\n            series: [{\n                name: '热点分析',//数据提示窗标题\n                type: 'wordCloud',\n                sizeRange: [6, 66],//画布范围，如果设置太大会出现少词（溢出屏幕）\n                rotationRange: [-45, 90],//数据翻转范围\n                //shape: 'circle',\n                textPadding: 0,\n                autoSize: {\n                    enable: true,\n                    minSize: 6\n                },\n                textStyle: {\n                    normal: {\n                        color: function() {\n                            return 'rgb(' + [\n                                Math.round(Math.random() * 160),\n                                Math.round(Math.random() * 160),\n                                Math.round(Math.random() * 160)\n                            ].join(',') + ')';\n                        }\n                    },\n                    emphasis: {\n                        shadowBlur: 10,\n                        shadowColor: '#333'\n                    }\n                },\n                data: [{\n                    name: \"数据一\",\n                    value: 1000\n                }, {\n                    name: \"数据二\",\n                    value: 520\n                },{\n                    name: \"数据一\",\n                    value: 1000\n                }, {\n                    name: \"数据二\",\n                    value: 520\n                },{\n                    name: \"数据一\",\n                    value: 1000\n                }, {\n                    name: \"数据二\",\n                    value: 520\n                },{\n                    name: \"数据一\",\n                    value: 1000\n                }, {\n                    name: \"数据二\",\n                    value: 520\n                }]\n            }]\n        };\n        this.myChart.setOption(option);\n    }\n    componentDidMount(){\n        this.myChart = echarts.init(document.getElementsByClassName('widget-box')[0])\n        this.drawWordcloud()\n    }\n\n    componentWillReceiveProps(nextProps){\n        if(JSON.stringify(this.props.canvasWH) !== JSON.stringify(nextProps.canvasWH)){\n            this.setState({\n                canvasWH: nextProps.canvasWH\n            })\n            this.myChart.resize();\n        }\n    }\n\n    render(){\n        return(\n            <div className=\"widget-box\" style={{width: '100%', height: '100%'}}>\n\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}