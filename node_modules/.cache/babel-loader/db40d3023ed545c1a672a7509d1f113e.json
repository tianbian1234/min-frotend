{"ast":null,"code":"import _classCallCheck from \"/Users/a/min_frotend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/a/min_frotend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/a/min_frotend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/a/min_frotend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/a/min_frotend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/a/min_frotend/src/containers/amap.js\";\nimport React, { Component } from 'react';\nvar AMap = window.AMap;\nvar Loca = window.Loca;\n\nvar Amap =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Amap, _Component);\n\n  function Amap(props) {\n    var _this;\n\n    _classCallCheck(this, Amap);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Amap).call(this, props));\n\n    _this.openInfoWin = function (map, event, content) {\n      if (!_this.infoWin) {\n        _this.infoWin = new AMap.InfoWindow({\n          isCustom: true,\n          //使用自定义窗体\n          offset: new AMap.Pixel(130, 100)\n        });\n      }\n\n      var x = event.offsetX;\n      var y = event.offsetY;\n      var lngLat = map.containerToLngLat(new AMap.Pixel(x, y));\n\n      if (!_this.tableDom) {\n        var infoDom = document.createElement('div');\n        infoDom.className = 'info';\n        _this.tableDom = document.createElement('table');\n        infoDom.appendChild(_this.tableDom);\n\n        _this.infoWin.setContent(infoDom);\n      }\n\n      var trStr = '';\n\n      for (var name in content) {\n        var val = content[name];\n        trStr += '<tr>' + '<td class=\"label\">' + name + '</td>' + '<td>&nbsp;</td>' + '<td class=\"content\">' + val + '</td>' + '</tr>';\n      }\n\n      _this.tableDom.innerHTML = trStr;\n\n      _this.infoWin.open(map, lngLat);\n    };\n\n    _this.closeInfoWin = function () {\n      if (_this.infoWin) {\n        _this.infoWin.close();\n      }\n    };\n\n    _this.infoWin = null;\n    _this.tableDom = null;\n    return _this;\n  }\n\n  _createClass(Amap, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var map = new AMap.Map('container', {\n        mapStyle: 'amap://styles/3d7f941a3d5502413c674d6a1dc652d4',\n        visible: true,\n        zoom: 4,\n        center: [107.4976, 32.1697],\n        viewMode: '3D'\n      });\n      var layer = new Loca.PointLayer({\n        eventSupport: true,\n        fitView: true,\n        map: map\n      });\n      layer.on('mousemove', function (ev) {\n        // 事件类型\n        // var type = ev.type;\n        // 当前元素的原始数据\n        var rawData = ev.rawData; // 原始鼠标事件\n\n        var originalEvent = ev.originalEvent;\n\n        _this2.openInfoWin(map, originalEvent, {\n          '名称': rawData.name,\n          '位置': rawData.center\n        });\n      });\n      layer.on('mouseleave', function (ev) {\n        _this2.closeInfoWin();\n      });\n      var districts = [{\n        'name': '北京市',\n        'center': '116.407394,39.904211'\n      }, {\n        'name': '天津市',\n        'center': '117.200983,39.084158'\n      }, {\n        'name': '河北省',\n        'center': '114.530235,38.037433'\n      }, {\n        'name': '山西省',\n        'center': '112.562678,37.873499'\n      }, {\n        'name': '内蒙古自治区',\n        'center': '111.76629,40.81739'\n      }, {\n        'name': '辽宁省',\n        'center': '123.431382,41.836175'\n      }, {\n        'name': '吉林省',\n        'center': '125.32568,43.897016'\n      }, {\n        'name': '黑龙江省',\n        'center': '126.661665,45.742366'\n      }, {\n        'name': '上海市',\n        'center': '121.473662,31.230372'\n      }, {\n        'name': '江苏省',\n        'center': '118.762765,32.060875'\n      }, {\n        'name': '浙江省',\n        'center': '120.152585,30.266597'\n      }, {\n        'name': '安徽省',\n        'center': '117.329949,31.733806'\n      }, {\n        'name': '福建省',\n        'center': '119.295143,26.100779'\n      }, {\n        'name': '江西省',\n        'center': '115.81635,28.63666'\n      }, {\n        'name': '山东省',\n        'center': '117.019915,36.671156'\n      }, {\n        'name': '河南省',\n        'center': '113.753394,34.765869'\n      }, {\n        'name': '湖北省',\n        'center': '114.341745,30.546557'\n      }, {\n        'name': '湖南省',\n        'center': '112.9836,28.112743'\n      }, {\n        'name': '广东省',\n        'center': '113.26641,23.132324'\n      }, {\n        'name': '广西壮族自治区',\n        'center': '108.327546,22.815478'\n      }, {\n        'name': '海南省',\n        'center': '110.349228,20.017377'\n      }, {\n        'name': '重庆市',\n        'center': '106.551643,29.562849'\n      }, {\n        'name': '四川省',\n        'center': '104.075809,30.651239'\n      }, {\n        'name': '贵州省',\n        'center': '106.70546,26.600055'\n      }, {\n        'name': '云南省',\n        'center': '102.710002,25.045806'\n      }, {\n        'name': '西藏自治区',\n        'center': '91.117525,29.647535'\n      }, {\n        'name': '陕西省',\n        'center': '108.954347,34.265502'\n      }, {\n        'name': '甘肃省',\n        'center': '103.826447,36.05956'\n      }, {\n        'name': '青海省',\n        'center': '101.780268,36.620939'\n      }, {\n        'name': '宁夏回族自治区',\n        'center': '106.259126,38.472641'\n      }, {\n        'name': '新疆维吾尔自治区',\n        'center': '87.627704,43.793026'\n      }, {\n        'name': '台湾省',\n        'center': '121.509062,25.044332'\n      }, {\n        'name': '香港特别行政区',\n        'center': '114.171203,22.277468'\n      }, {\n        'name': '澳门特别行政区',\n        'center': '113.543028,22.186835'\n      }];\n      layer.setData(districts, {\n        lnglat: 'center'\n      });\n      layer.setOptions({\n        style: {\n          radius: 10,\n          color: '#4fc2ff',\n          borderColor: '#ffffff',\n          borderWidth: 1.5,\n          opacity: 0.8\n        },\n        selectStyle: {\n          radius: 14,\n          color: '#ffe30a'\n        }\n      });\n      layer.render();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        id: \"container\",\n        style: {\n          width: '100%',\n          height: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Amap;\n}(Component);\n\nexport default Amap;","map":{"version":3,"sources":["/Users/a/min_frotend/src/containers/amap.js"],"names":["React","Component","AMap","window","Loca","Amap","props","openInfoWin","map","event","content","infoWin","InfoWindow","isCustom","offset","Pixel","x","offsetX","y","offsetY","lngLat","containerToLngLat","tableDom","infoDom","document","createElement","className","appendChild","setContent","trStr","name","val","innerHTML","open","closeInfoWin","close","Map","mapStyle","visible","zoom","center","viewMode","layer","PointLayer","eventSupport","fitView","on","ev","rawData","originalEvent","districts","setData","lnglat","setOptions","style","radius","color","borderColor","borderWidth","opacity","selectStyle","render","width","height"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nconst AMap = window.AMap;\nconst Loca = window.Loca;\nclass Amap extends Component{\n    constructor(props){\n        super(props)\n        this.infoWin = null\n        this.tableDom = null\n    }\n  \n    openInfoWin = (map, event, content) => {\n        if (!this.infoWin) {\n            this.infoWin = new AMap.InfoWindow({\n                isCustom: true,  //使用自定义窗体\n                offset: new AMap.Pixel(130, 100)\n            });\n        }\n    \n        var x = event.offsetX;\n        var y = event.offsetY;\n        var lngLat = map.containerToLngLat(new AMap.Pixel(x, y));\n    \n        if (!this.tableDom) {\n            let infoDom = document.createElement('div');\n            infoDom.className = 'info';\n            this.tableDom = document.createElement('table');\n            infoDom.appendChild(this.tableDom);\n            this.infoWin.setContent(infoDom);\n        }\n    \n        var trStr = '';\n        for (var name in content) {\n            var val = content[name];\n            trStr +=\n                '<tr>' +\n                    '<td class=\"label\">' + name + '</td>' +\n                    '<td>&nbsp;</td>' +\n                    '<td class=\"content\">' + val + '</td>' +\n                '</tr>'\n        }\n    \n        this.tableDom.innerHTML = trStr;\n        this.infoWin.open(map, lngLat);\n    }\n    \n    closeInfoWin = () => {\n        if (this.infoWin) {\n            this.infoWin.close();\n        }\n    }\n\n    componentDidMount(){\n        var map = new AMap.Map('container', {\n            mapStyle: 'amap://styles/3d7f941a3d5502413c674d6a1dc652d4',\n            visible: true,\n            zoom: 4,\n            center: [107.4976, 32.1697],\n            viewMode: '3D'\n        });\n\n        var layer = new Loca.PointLayer({\n            eventSupport: true,\n            fitView: true,\n            map: map\n        });\n\n        layer.on('mousemove', (ev) => {\n            // 事件类型\n            // var type = ev.type;\n            // 当前元素的原始数据\n            var rawData = ev.rawData;\n            // 原始鼠标事件\n            var originalEvent = ev.originalEvent;\n\n            this.openInfoWin(map, originalEvent, {\n                '名称': rawData.name,\n                '位置': rawData.center\n            });\n        });\n\n        layer.on('mouseleave', (ev) => {\n            this.closeInfoWin();\n        });\n        let districts = [\n            { 'name': '北京市', 'center': '116.407394,39.904211' },\n            { 'name': '天津市', 'center': '117.200983,39.084158' },\n            { 'name': '河北省', 'center': '114.530235,38.037433' },\n            { 'name': '山西省', 'center': '112.562678,37.873499' },\n            { 'name': '内蒙古自治区', 'center': '111.76629,40.81739' },\n            { 'name': '辽宁省', 'center': '123.431382,41.836175' },\n            { 'name': '吉林省', 'center': '125.32568,43.897016' },\n            { 'name': '黑龙江省', 'center': '126.661665,45.742366' },\n            { 'name': '上海市', 'center': '121.473662,31.230372' },\n            { 'name': '江苏省', 'center': '118.762765,32.060875' },\n            { 'name': '浙江省', 'center': '120.152585,30.266597' },\n            { 'name': '安徽省', 'center': '117.329949,31.733806' },\n            { 'name': '福建省', 'center': '119.295143,26.100779' },\n            { 'name': '江西省', 'center': '115.81635,28.63666' },\n            { 'name': '山东省', 'center': '117.019915,36.671156' },\n            { 'name': '河南省', 'center': '113.753394,34.765869' },\n            { 'name': '湖北省', 'center': '114.341745,30.546557' },\n            { 'name': '湖南省', 'center': '112.9836,28.112743' },\n            { 'name': '广东省', 'center': '113.26641,23.132324' },\n            { 'name': '广西壮族自治区', 'center': '108.327546,22.815478' },\n            { 'name': '海南省', 'center': '110.349228,20.017377' },\n            { 'name': '重庆市', 'center': '106.551643,29.562849' },\n            { 'name': '四川省', 'center': '104.075809,30.651239' },\n            { 'name': '贵州省', 'center': '106.70546,26.600055' },\n            { 'name': '云南省', 'center': '102.710002,25.045806' },\n            { 'name': '西藏自治区', 'center': '91.117525,29.647535' },\n            { 'name': '陕西省', 'center': '108.954347,34.265502' },\n            { 'name': '甘肃省', 'center': '103.826447,36.05956' },\n            { 'name': '青海省', 'center': '101.780268,36.620939' },\n            { 'name': '宁夏回族自治区', 'center': '106.259126,38.472641' },\n            { 'name': '新疆维吾尔自治区', 'center': '87.627704,43.793026' },\n            { 'name': '台湾省', 'center': '121.509062,25.044332' },\n            { 'name': '香港特别行政区', 'center': '114.171203,22.277468' },\n            { 'name': '澳门特别行政区', 'center': '113.543028,22.186835' }\n        ];\n\n        layer.setData(districts, {\n            lnglat: 'center'\n        });\n\n        layer.setOptions({\n            style: {\n                radius: 10,\n                color: '#4fc2ff',\n                borderColor: '#ffffff',\n                borderWidth: 1.5,\n                opacity: 0.8\n            },\n            selectStyle: {\n                radius: 14,\n                color: '#ffe30a'\n            }\n        });\n\n        layer.render();\n    }\n    render(){\n        return(\n            <div id=\"container\" style={{width: '100%', height: '100%'}}>\n\n            </div>\n            \n        )\n    }\n}\n\nexport default Amap"]},"metadata":{},"sourceType":"module"}