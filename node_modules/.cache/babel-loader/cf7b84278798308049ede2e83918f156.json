{"ast":null,"code":"var echarts = require('echarts/lib/echarts');\n\nfunction getShallow(model, path) {\n  return model && model.getShallow(path);\n}\n\necharts.extendChartView({\n  type: 'wordCloud',\n  render: function render(seriesModel, ecModel, api) {\n    var group = this.group;\n    group.removeAll();\n    var data = seriesModel.getData();\n    var gridSize = seriesModel.get('gridSize');\n\n    seriesModel.layoutInstance.ondraw = function (text, size, dataIdx, drawn) {\n      var itemModel = data.getItemModel(dataIdx);\n      var textStyleModel = itemModel.getModel('textStyle.normal');\n      var emphasisTextStyleModel = itemModel.getModel('textStyle.emphasis');\n      var textEl = new echarts.graphic.Text({\n        style: echarts.graphic.setTextStyle({}, textStyleModel, {\n          x: drawn.info.fillTextOffsetX,\n          y: drawn.info.fillTextOffsetY + size * 0.5,\n          text: text,\n          textBaseline: 'middle',\n          textFill: data.getItemVisual(dataIdx, 'color'),\n          fontSize: size\n        }),\n        scale: [1 / drawn.info.mu, 1 / drawn.info.mu],\n        position: [(drawn.gx + drawn.info.gw / 2) * gridSize, (drawn.gy + drawn.info.gh / 2) * gridSize],\n        rotation: drawn.rot\n      });\n      group.add(textEl);\n      data.setItemGraphicEl(dataIdx, textEl);\n      echarts.graphic.setHoverStyle(textEl, echarts.graphic.setTextStyle({}, emphasisTextStyleModel, null, {\n        forMerge: true\n      }, true));\n    };\n\n    this._model = seriesModel;\n  },\n  remove: function remove() {\n    this.group.removeAll();\n\n    this._model.layoutInstance.dispose();\n  },\n  dispose: function dispose() {\n    this._model.layoutInstance.dispose();\n  }\n});","map":null,"metadata":{},"sourceType":"script"}