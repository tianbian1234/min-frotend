{"ast":null,"code":"var _jsxFileName = \"/Users/a/min_frotend/src/components/echarts/bar/index.js\";\nimport React, { useEffect, useRef } from 'react';\nimport echarts from 'echarts';\n\nvar Bar = function Bar(props) {\n  var drawB = useRef(null);\n  useEffect(function () {\n    var myChart = echarts.init(drawB.current);\n    var data1 = [20, 30, 20, 30, 20, 30, 20, 30, 20, 30];\n    var data2 = [9, 30, 9, 60, 70, 20, 59, 20, 49, 20];\n    var data3 = [20, 30, 20, 30, 20, 30, 20, 30, 20, 30];\n    var datacity = ['济南市', '青岛市', '淄博市', '枣庄', '东营', '烟台市', '潍坊市', '济宁市', '威海市', '泰安市'];\n    var option = {\n      color: ['#388BFF', '#05C3FA', '#F6931C', '#FFD52E'],\n      tooltip: {\n        trigger: 'axis'\n      },\n      legend: {\n        top: '8%',\n        data: ['存量', '新增', '拆除', '整改']\n      },\n      grid: {\n        //图表的位置\n        top: '20%',\n        left: '3%',\n        right: '4%',\n        bottom: '5%',\n        containLabel: true\n      },\n      yAxis: [{\n        type: 'value',\n        axisLabel: {\n          show: true,\n          interval: 'auto',\n          formatter: '{value} '\n        },\n        splitLine: {\n          show: true,\n          lineStyle: {\n            type: 'dashed'\n          }\n        },\n        show: true\n      }],\n      xAxis: [{\n        type: 'category',\n        axisLabel: {\n          interval: 0,\n          show: true,\n          splitNumber: 15,\n          textStyle: {\n            fontSize: 10,\n            color: '#000'\n          }\n        },\n        data: datacity\n      }],\n      series: [{\n        name: '存量',\n        type: 'bar',\n        stack: 'sum',\n        barWidth: '20px',\n        data: data1\n      }, {\n        name: '新增',\n        type: 'bar',\n        barWidth: '20px',\n        stack: 'sum',\n        data: data2\n      }, {\n        name: '拆除',\n        type: 'bar',\n        color: '#F6931C',\n        stack: 'sum1',\n        barWidth: '20px',\n        data: data3\n      }, {\n        name: '整改',\n        type: 'bar',\n        color: '#FFD52E',\n        stack: 'sum1',\n        barWidth: '20px',\n        data: data3\n      }]\n    };\n    myChart.setOption(option);\n  });\n  return React.createElement(\"div\", {\n    ref: drawB,\n    style: {\n      width: '100%',\n      height: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  });\n};\n\nexport default Bar;","map":{"version":3,"sources":["/Users/a/min_frotend/src/components/echarts/bar/index.js"],"names":["React","useEffect","useRef","echarts","Bar","props","drawB","myChart","init","current","data1","data2","data3","datacity","option","color","tooltip","trigger","legend","top","data","grid","left","right","bottom","containLabel","yAxis","type","axisLabel","show","interval","formatter","splitLine","lineStyle","xAxis","splitNumber","textStyle","fontSize","series","name","stack","barWidth","setOption","width","height"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport echarts from 'echarts';\n\nconst Bar = (props) => {\n    let drawB = useRef(null);\n\n    useEffect(() => {\n        let myChart = echarts.init(drawB.current);\n        let data1 = [20, 30, 20, 30, 20, 30, 20, 30, 20, 30];\n        let data2 = [9, 30, 9, 60, 70, 20, 59, 20, 49, 20];\n        let data3 = [20, 30, 20, 30, 20, 30, 20, 30, 20, 30];\n        let datacity = ['济南市', '青岛市', '淄博市', '枣庄', '东营', '烟台市', '潍坊市', '济宁市', '威海市', '泰安市'];\n        let option = {\n                color: ['#388BFF', '#05C3FA', '#F6931C', '#FFD52E'],\n                tooltip: {\n                    trigger: 'axis',\n                },\n                legend: {\n            \n                    top: '8%',\n                    data: ['存量', '新增', '拆除', '整改'],\n                },\n                grid: { //图表的位置\n                    top: '20%',\n                    left: '3%',\n                    right: '4%',\n                    bottom: '5%',\n                    containLabel: true\n                },\n                yAxis: [{\n                    type: 'value',\n                    axisLabel: {\n                        show: true,\n                        interval: 'auto',\n                        formatter: '{value} '\n                    },\n                    splitLine: {\n                        show: true,\n                        lineStyle: {\n                            type: 'dashed'\n                        }\n                    },\n                    show: true\n            \n                }],\n                xAxis: [{\n                    type: 'category',\n                    axisLabel: {\n                        interval: 0,\n                        show: true,\n                        splitNumber: 15,\n                        textStyle: {\n                            fontSize: 10,\n                            color: '#000'\n                        },\n            \n                    },\n                    data: datacity,\n                }],\n                series: [{\n                        name: '存量',\n                        type: 'bar',\n                        stack: 'sum',\n                        barWidth: '20px',\n                        data: data1\n            \n                    },\n                    {\n                        name: '新增',\n                        type: 'bar',\n                        barWidth: '20px',\n                        stack: 'sum',\n                        data: data2,\n            \n                    },\n                    {\n                        name: '拆除',\n                        type: 'bar',\n                        color: '#F6931C',\n                        stack: 'sum1',\n                        barWidth: '20px',\n                        data: data3\n            \n                    },\n                    {\n                        name: '整改',\n                        type: 'bar',\n                        color: '#FFD52E',\n                        stack: 'sum1',\n                        barWidth: '20px',\n                        data: data3\n            \n                    },\n                ]\n            };\n        myChart.setOption(option)\n    })\n\n\n    return (<div ref={drawB} style={{width: '100%', height: '100%'}}>\n\n    </div>)\n}\n\nexport default Bar;"]},"metadata":{},"sourceType":"module"}