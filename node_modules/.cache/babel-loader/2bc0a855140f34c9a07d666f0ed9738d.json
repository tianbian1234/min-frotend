{"ast":null,"code":"import _classCallCheck from \"/Users/a/min_frotend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/a/min_frotend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/a/min_frotend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/a/min_frotend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/a/min_frotend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/a/min_frotend/src/components_common/d3/index.js\";\nimport React, { Component } from 'react';\nvar d3 = window.d3;\n\nvar D3Test =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(D3Test, _Component);\n\n  function D3Test() {\n    _classCallCheck(this, D3Test);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(D3Test).apply(this, arguments));\n  }\n\n  _createClass(D3Test, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // 设置绘图所需的大小\n      var width = 800,\n          height = 800; // 或者图的svg对象\n\n      var svg = d3.select('.container').append('svg').attr('width', width + 'px').attr('height', height + 'px'); // 球面墨卡托投影. 定义了默认的 projection.clipExtent: 世界被投射到一个正方形上, 裁剪到大约 ±85° 纬度.\n\n      var projection = d3.geoMercator().center([107, 31]).scale(400); // 创建一个新的地理路径生成器。\n\n      var path = d3.geoPath().projection(projection); // 添加地图的放置控件\n\n      var mapLayer = svg.append('g').attr('class', 'maplayer');\n      console.log(\"dhdhdhhdhdhdh\", d3.json('geojson/CHN.json')); // 通过d3.json获取响应的数据，下面就是图形绘制的代码了\n\n      d3.json(\"geojson/CHN.json\").then(function (data) {\n        console.log(\"eeeeeeeeee\", data);\n        mapLayer.selectAll(\"path\").data(data.features).enter().append(\"path\").attr(\"d\", path).attr('vector-effect', 'non-scaling-stroke').style(\"fill\", function () {\n          return \"#44aaee\";\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"container\",\n        style: {\n          width: 800,\n          height: 800,\n          background: '#fff'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return D3Test;\n}(Component);\n\nexport { D3Test as default };","map":{"version":3,"sources":["/Users/a/min_frotend/src/components_common/d3/index.js"],"names":["React","Component","d3","window","D3Test","width","height","svg","select","append","attr","projection","geoMercator","center","scale","path","geoPath","mapLayer","console","log","json","then","data","selectAll","features","enter","style","background"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,IAAMC,EAAE,GAAGC,MAAM,CAACD,EAAlB;;IAEqBE,M;;;;;;;;;;;;;wCAEE;AACf;AACA,UAAIC,KAAK,GAAG,GAAZ;AAAA,UAAiBC,MAAM,GAAG,GAA1B,CAFe,CAGf;;AACA,UAAIC,GAAG,GAAGL,EAAE,CAACM,MAAH,CAAU,YAAV,EACLC,MADK,CACE,KADF,EAELC,IAFK,CAEA,OAFA,EAESL,KAAK,GAAG,IAFjB,EAGLK,IAHK,CAGA,QAHA,EAGUJ,MAAM,GAAG,IAHnB,CAAV,CAJe,CASf;;AACA,UAAIK,UAAU,GAAGT,EAAE,CAACU,WAAH,GACZC,MADY,CACL,CAAC,GAAD,EAAM,EAAN,CADK,EAEZC,KAFY,CAEN,GAFM,CAAjB,CAVe,CAcf;;AACA,UAAIC,IAAI,GAAGb,EAAE,CAACc,OAAH,GACNL,UADM,CACKA,UADL,CAAX,CAfe,CAiBf;;AACA,UAAIM,QAAQ,GAAGV,GAAG,CAACE,MAAJ,CAAW,GAAX,EACVC,IADU,CACL,OADK,EACI,UADJ,CAAf;AAEAQ,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BjB,EAAE,CAACkB,IAAH,CAAQ,kBAAR,CAA7B,EApBe,CAqBf;;AACAlB,MAAAA,EAAE,CAACkB,IAAH,CAAQ,kBAAR,EAA4BC,IAA5B,CAAiC,UAACC,IAAD,EAAU;AACvCJ,QAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BG,IAA1B;AACAL,QAAAA,QAAQ,CAACM,SAAT,CAAmB,MAAnB,EAA2BD,IAA3B,CAAgCA,IAAI,CAACE,QAArC,EACKC,KADL,GACahB,MADb,CACoB,MADpB,EAEKC,IAFL,CAEU,GAFV,EAEeK,IAFf,EAGKL,IAHL,CAGU,eAHV,EAG2B,oBAH3B,EAIKgB,KAJL,CAIW,MAJX,EAImB,YAAW;AAAE,iBAAO,SAAP;AAAkB,SAJlD;AAKC,OAPL;AAQH;;;6BAEO;AACJ,aACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAA2B,QAAA,KAAK,EAAE;AAACrB,UAAAA,KAAK,EAAE,GAAR;AAAaC,UAAAA,MAAM,EAAE,GAArB;AAA0BqB,UAAAA,UAAU,EAAE;AAAtC,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAKH;;;;EAxC+B1B,S;;SAAfG,M","sourcesContent":["import React, { Component } from 'react';\n\nconst d3 = window.d3;\n\nexport default class D3Test extends Component{\n\n    componentDidMount(){\n        // 设置绘图所需的大小\n        let width = 800, height = 800;\n        // 或者图的svg对象\n        let svg = d3.select('.container')\n            .append('svg')\n            .attr('width', width + 'px')\n            .attr('height', height + 'px')\n        \n        // 球面墨卡托投影. 定义了默认的 projection.clipExtent: 世界被投射到一个正方形上, 裁剪到大约 ±85° 纬度.\n        let projection = d3.geoMercator()\n            .center([107, 31])\n            .scale(400)\n        \n        // 创建一个新的地理路径生成器。\n        let path = d3.geoPath()\n            .projection(projection);\n        // 添加地图的放置控件\n        let mapLayer = svg.append('g')\n            .attr('class', 'maplayer')\n        console.log(\"dhdhdhhdhdhdh\", d3.json('geojson/CHN.json'));\n        // 通过d3.json获取响应的数据，下面就是图形绘制的代码了\n        d3.json(\"geojson/CHN.json\").then((data) => {\n            console.log(\"eeeeeeeeee\", data);\n            mapLayer.selectAll(\"path\").data(data.features)\n                .enter().append(\"path\")\n                .attr(\"d\", path)\n                .attr('vector-effect', 'non-scaling-stroke')\n                .style(\"fill\", function() { return \"#44aaee\" })\n            });\n    }\n\n    render(){\n        return(\n            <div className='container' style={{width: 800, height: 800, background: '#fff'}}>\n                \n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}